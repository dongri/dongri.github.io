<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Staking on dongri</title>
    <link>https://dongri.github.io/tags/staking/</link>
    <description>Recent content in Staking on dongri</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 10 Jan 2023 18:15:43 +0900</lastBuildDate>
    <atom:link href="https://dongri.github.io/tags/staking/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The Merge後のEthereumステーキングの話</title>
      <link>https://dongri.github.io/2023/01/the-merge%E5%BE%8C%E3%81%AEethereum%E3%82%B9%E3%83%86%E3%83%BC%E3%82%AD%E3%83%B3%E3%82%B0%E3%81%AE%E8%A9%B1/</link>
      <pubDate>Tue, 10 Jan 2023 18:15:43 +0900</pubDate>
      <guid>https://dongri.github.io/2023/01/the-merge%E5%BE%8C%E3%81%AEethereum%E3%82%B9%E3%83%86%E3%83%BC%E3%82%AD%E3%83%B3%E3%82%B0%E3%81%AE%E8%A9%B1/</guid>
      <description>&lt;p&gt;2022年9月15日にマージが無事完了。&#xA;ステーキングに関してinfura,alchemyなどのRPCがマージ後は使えなくなった。&#xA;つまりノードを自分で建てないといけない。2TBのストレージ用意するのは結構なコスト。&lt;/p&gt;&#xA;&lt;p&gt;今まではawsで月1万円ちょっとでalexaアプリ開発のクレジット50ドル分があったので、実質5千円ぐらいでステーキングできたのが、2TBストレージのノードまで建てると月7万円まで膨らんだ。クリプトのこの冬にこれはやってられないと思って、自宅でノード建てようと思った。使ってないMacBookでやってみたが1TBストレージが10日間ぐらいでいっぱいになった。外部SSD接続してもよいが、どうせやるならRaspberry Piで遊んでみようと思ってRaspberry Piと4TBのSSDを買って構築。&lt;/p&gt;&#xA;&lt;h2 id=&#34;ハードウェア&#34;&gt;ハードウェア&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Raspberry Pi 4B 8GB&#xA;4TB SSD&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;いろいろな問題&#34;&gt;いろいろな問題&lt;/h2&gt;&#xA;&lt;p&gt;いろんな想定外の問題に遭遇したのでリストしてみた&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;2TB以上のストレージマウント問題&lt;br&gt;&#xA;OSとデータを4TB SSDで動かそうとして、マウントで2TB以上だとマウントがうまく行かない問題。GPTフォーマットにしないといけない。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Ethereum on Arm イメージ動かない問題&lt;br&gt;&#xA;&lt;a href=&#34;https://ethereum-on-arm-documentation.readthedocs.io/en/latest/index.html&#34;&gt;https://ethereum-on-arm-documentation.readthedocs.io/en/latest/index.html&lt;/a&gt;&#xA;インストールしたけど、ethereum/etehreumでログインできない。&#xA;諦めて自前でRaspberry Pi用のUbuntuを入れる&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;4TBストレージが壊れた&lt;br&gt;&#xA;Gethの同期中突然書き込めなくなった。試しに修復コマンドで頑張ってみたがだめだった。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Geth最後の100 blockぐらいで同期が終わらない問題&lt;br&gt;&#xA;最後の100 blockが12時間経っても同期が終わらない、ディスクI/Oか、bandwidthの問題&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;USB 2が遅い問題&lt;br&gt;&#xA;SSDをUSB 2のところに挿してた。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;WiFiが遅い問題&lt;br&gt;&#xA;MacBookではWiFiで問題なくステーキングできたけど、Raspberry PiのWiFiは遅い、LANケーブルに変更&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;電源問題&lt;br&gt;&#xA;Raspberry Pi買った時に付いて来た電源を使ってたが、しばらく動かすとsshできなくなり、Raspberry Piが無反応状態になる、PC用の電源に変更。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Prysmがメモリ食う問題&lt;br&gt;&#xA;Go製のPrysmは8GBのメモリでGethと一緒に動かすとメモリが足りなくてすぐ死ぬ、Rust製のLighthouseに変更&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;それでもメモリ足りない問題&lt;br&gt;&#xA;Lighthouseはある程度動かしたけど、数時間立つとvalidator client側が落ちる。&#xA;3GBのswapfile作成してswapスペースを確保する&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;普段クラウド（aws, gcp）で動かすとなかなか出会えない問題で辛かった。面白かったところもあるけど&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://dongri.github.io/images/post/2023-01-10/raspberry-pi.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ETH2 Staking</title>
      <link>https://dongri.github.io/2020/12/eth2-staking/</link>
      <pubDate>Sun, 13 Dec 2020 09:46:43 +0900</pubDate>
      <guid>https://dongri.github.io/2020/12/eth2-staking/</guid>
      <description>&lt;p&gt;ETH2のステーキング方法について、まともな日本語記事がなかったり、あっても会員登録必要だったり、逆にわかりにくかったりしたので、自分がやった手順を書こうと思います。&lt;/p&gt;&#xA;&lt;h2 id=&#34;staking&#34;&gt;Staking&lt;/h2&gt;&#xA;&lt;p&gt;ステーキングとはPoS（Proof of Stake）において、仮想通貨を自由に動かせない状態（ロック状態）にしてブロックに追加するデータの承認などの面でネットワークの維持に関わる見返りとして、その報酬を仮想通貨で受け取る仕組みです。&#xA;ETH2のステーキングだと年利4.9% ~ 21.6%ですが、stakeするETHが多ければ多いほど下がります。12月12日時点で13%程度です。&#xA;デポジットに関しても始まった時の進捗では524,288 ETHまで間に合うか心配してたが、後半になって一気に増えて予定した12月1日のローンチに間に合いました。&lt;/p&gt;&#xA;&lt;h2 id=&#34;deposit&#34;&gt;Deposit&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://launchpad.ethereum.org/&#34;&gt;https://launchpad.ethereum.org/&lt;/a&gt; で32ETHをデポジットします。（注意: デポジットされた32ETHは今のところ2年間ロックされるので注意が必要）&#xA;デポジット方法は、 &lt;a href=&#34;https://launchpad.ethereum.org/overview&#34;&gt;https://launchpad.ethereum.org/overview&lt;/a&gt; ここの手順のまま進めばできるかと思います。&#xA;特に難しいことはありませんでしたが、ETH1とETH2のクライアント選ぶ時もしかすると注意が必要です。後ほどBeacon node起動する時のクライアントと関係してるので。&#xA;自分の場合はどっちもGo言語実装のGethとPrysmを選択しました。&#xA;デポジットが完了すると、validator_keysファイルを取得できるので、安全な場所に保管します。&lt;/p&gt;&#xA;&lt;h2 id=&#34;prysm-環境&#34;&gt;Prysm 環境&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.prylabs.network/docs/install/install-with-script#system-requirements&#34;&gt;https://docs.prylabs.network/docs/install/install-with-script#system-requirements&lt;/a&gt;&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Recommended specifications&#xA;* Processor: Intel Core i7–4770 or AMD FX-8310 or better&#xA;* Memory: 16GB RAM&#xA;* Storage: 100GB available space SSD&#xA;* Internet: Broadband connection&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ラズパイとかでやってみようかと思ってたけど、このスペックは難しいのでペナルティ受ける可能性のあるawsにしました。&#xA;aws, gcp, azureなど大手クラウドサービスだと障害が起きた時大規模のノードが止まる可能性があるので、ペナルティがあるようです。&lt;/p&gt;&#xA;&lt;p&gt;EC2インスタンス&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Memory: 16GB&#xA;Storage: 100GB&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;beacon-node&#34;&gt;Beacon node&lt;/h2&gt;&#xA;&lt;p&gt;続いてbeacon chainのnodeを起動する必要あります。&#xA;&lt;a href=&#34;https://docs.prylabs.network/docs/install/install-with-script/&#34;&gt;https://docs.prylabs.network/docs/install/install-with-script/&lt;/a&gt; こちらからprysm.shをダウンロードします。&#xA;続いて &lt;a href=&#34;https://docs.prylabs.network/docs/mainnet/joining-eth2&#34;&gt;https://docs.prylabs.network/docs/mainnet/joining-eth2&lt;/a&gt; こちらに書いてあるStepでbeacon nodeの起動、validator accountのインポート、validatorの起動順にやっていきます。&lt;/p&gt;&#xA;&lt;h3 id=&#34;prysmshダウンロード&#34;&gt;prysm.shダウンロード&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ mkdir prysm &amp;amp;&amp;amp; cd prysm&#xA;$ curl https://raw.githubusercontent.com/prysmaticlabs/prysm/master/prysm.sh --output prysm.sh &amp;amp;&amp;amp; chmod +x prysm.sh&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;beacon-node-1&#34;&gt;Beacon node&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ ./prysm.sh beacon-chain --http-web3provider=https://mainnet.infura.io/v3/****&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;自前のETH1ノード使いたくなかったので、infuraを使うようにしました。もちろん自前のETHノードでも問題ないです。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
