<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Alexa on dongri</title>
    <link>https://dongri.github.io/tags/alexa/</link>
    <description>Recent content in Alexa on dongri</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 31 Jan 2018 23:12:53 +0900</lastBuildDate>
    <atom:link href="https://dongri.github.io/tags/alexa/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Alexa Skill 審査通ってリリースできた</title>
      <link>https://dongri.github.io/2018/01/alexa-skill-%E5%AF%A9%E6%9F%BB%E9%80%9A%E3%81%A3%E3%81%A6%E3%83%AA%E3%83%AA%E3%83%BC%E3%82%B9%E3%81%A7%E3%81%8D%E3%81%9F/</link>
      <pubDate>Wed, 31 Jan 2018 23:12:53 +0900</pubDate>
      <guid>https://dongri.github.io/2018/01/alexa-skill-%E5%AF%A9%E6%9F%BB%E9%80%9A%E3%81%A3%E3%81%A6%E3%83%AA%E3%83%AA%E3%83%BC%E3%82%B9%E3%81%A7%E3%81%8D%E3%81%9F/</guid>
      <description>&lt;p&gt;先日の &lt;a href=&#34;https://dongri.github.io/2018/01/rebuild%E3%81%AEalexa-skill%E3%82%92%E4%BD%9C%E3%81%A3%E3%81%A6%E3%83%AA%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%95%E3%82%8C%E3%81%9F%E8%A9%B1/&#34;&gt;「RebuildのAlexa Skillを作ってリジェクトされた話」&lt;/a&gt; は諦めましたが、「カフェの音」というスキルは頑張ってリリース出来ました。今回も三回リジェクトされ四回目でやっとな感じで、審査について書いてみます。&lt;/p&gt;&#xA;&lt;h2 id=&#34;一回目&#34;&gt;一回目&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Amazon Alexaスキルカタログに申請されたスキルに関して、第三者の商標またはブランドが使用されていたため、認定を却下いたしました。&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;アイコンにコーヒーカップに「カフェ・ベローチェ」文字があったのでダメでした。アイコンを変えて再申請&lt;/p&gt;&#xA;&lt;h2 id=&#34;二回目&#34;&gt;二回目&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;スキルの詳細カードに表示される説明には、ユーザーがスキルの使用方法について正確な情報が含まれていません。&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;一時停止と停止を分けて記述してくださいとのことだったのでその通りに修正して再申請&lt;/p&gt;&#xA;&lt;h2 id=&#34;三回目&#34;&gt;三回目&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Alexa Skills Kitの今後のバージョンでは、既存のプロパティとの後方互換性を維持しながら、JSONリクエストおよび応答のフォーマットに新しいプロパティが追加される場合があります。追加されたパラメーターを指定してスキルを呼び出した際、受け入れられると想定される場合にスキルがリクエストを拒否します。そのため、このタイプの変更に柔軟に対応できるコードを作成する必要があります。&#xA;たとえば、JSONリクエストをデシリアライズするコードは、新しい、不明なプロパティを検出しても停止しないようにすることが必要です。&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;これは意味不明で良くわからない。メールに書いてある「問い合わせ」リンク先も500エラーで落ちてるので、知るか！と思いそのまま再申請&lt;/p&gt;&#xA;&lt;h2 id=&#34;四回目&#34;&gt;四回目&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;この度は カフェの音で集中力アップ スキルを申請いただき、誠にありがとうございます。&#xA;おめでとうございます。スキルは認定プロセスに合格し、まもなくスキルストアに公開されます。&#xA;スキルストアに公開されると、サービスへのトラフィックが増えることが見込まれます。十分なキャパシティがあることをご確認ください。　また、ユーザーが想定外のオペレーションを行なった場合にもサービスが機能し続けることを確認してください。&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;通ったが、三回目は何だったんですかね？&lt;/p&gt;&#xA;&lt;p&gt;ログを仕込んでアクセスが来るとBotで通知来るようにしたので、審査が始まると通知が来てました。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;朝10時頃から始まるらしい&lt;/li&gt;&#xA;&lt;li&gt;複数人がやるみたいで、10時、13時、15時で3,4回集中してアクセスが来る&lt;/li&gt;&#xA;&lt;li&gt;意外と細かくテストしてる模様&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>RebuildのAlexa Skillを作ってリジェクトされた話</title>
      <link>https://dongri.github.io/2018/01/rebuild%E3%81%AEalexa-skill%E3%82%92%E4%BD%9C%E3%81%A3%E3%81%A6%E3%83%AA%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%95%E3%82%8C%E3%81%9F%E8%A9%B1/</link>
      <pubDate>Tue, 23 Jan 2018 23:13:19 +0900</pubDate>
      <guid>https://dongri.github.io/2018/01/rebuild%E3%81%AEalexa-skill%E3%82%92%E4%BD%9C%E3%81%A3%E3%81%A6%E3%83%AA%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%95%E3%82%8C%E3%81%9F%E8%A9%B1/</guid>
      <description>&lt;p&gt;Echo Dotが届いたのでAlexa Skillを作ってみることにしました。オフィスに届いた当日はSlackで使ってたhubot deployをAlexaからデプロイできるようにと遊んでみたがちゃんとしたものを作ろうと思って週末に &lt;a href=&#34;http://rebuild.fm&#34;&gt;http://rebuild.fm&lt;/a&gt; をAmazon Echoで聞けるようにしてみました。&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;以下実装上で困った話をしようと思います&lt;/p&gt;&#xA;&lt;h2 id=&#34;xml2jsonをrequireすると反応しない&#34;&gt;xml2jsonをrequireすると反応しない&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://feeds.rebuild.fm/rebuildfm&#34;&gt;http://feeds.rebuild.fm/rebuildfm&lt;/a&gt; RSSなのでxmlをパースする必要があり、nodejsでxmlパーサを探してみた結果これでした。&#xA;しかしrequireした時点でAlexa（Lambda）が反応しなくなりました。深く検証してませんが、おそらくnodejs 6.10にサポートしてないのが原因かと思われます。&lt;/p&gt;&#xA;&lt;h2 id=&#34;xml2jsファイルパースで無反応&#34;&gt;xml2jsファイルパースで無反応&lt;/h2&gt;&#xA;&lt;p&gt;xml2jsonがサポートしてないので、xml2jsで試してみました、こいつは正しく動いてるように見えますが、でかいファイルのパースにはダメでした。http://feeds.rebuild.fm/rebuildfm 実はこいつのxmlが意外とでかくて数千行もありましたね。。。&lt;/p&gt;&#xA;&lt;h2 id=&#34;自前のサーバーでやろう&#34;&gt;自前のサーバーでやろう&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://feeds.rebuild.fm/rebuildfm&#34;&gt;http://feeds.rebuild.fm/rebuildfm&lt;/a&gt; このfeedを定期的に取ってきて必要な情報だけjsonに変換してS3に突っ込んでそこから情報を取るようにしました。&lt;/p&gt;&#xA;&lt;h2 id=&#34;mp3が再生できない問題&#34;&gt;mp3が再生できない問題&lt;/h2&gt;&#xA;&lt;p&gt;Rebuildのfeedに書いてあるデフォルトのmp3ファイルだとURLがhttpのため &lt;code&gt;this.response.audioPlayerPlay&lt;/code&gt; では再生できませんでした。&#xA;これもなんとかしようとして自前のS3にアップロードしてhttps対応しました。&lt;/p&gt;&#xA;&lt;h2 id=&#34;自動化&#34;&gt;自動化&lt;/h2&gt;&#xA;&lt;p&gt;一時間おきにrebuildのfeedから最新のxmlからjsonに変換して、追加されたmp3ファイルをS3にアップロードするようにしました。&lt;/p&gt;&#xA;&lt;h2 id=&#34;リジェクト&#34;&gt;リジェクト&lt;/h2&gt;&#xA;&lt;p&gt;気軽く申請してみようと思い申請したものの、案の定リレクトされました。理由は&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;使用されている第三者の知的財産: 「Rebuild.fm」&#xA;第三者の知的財産が使用されていたメタデータ: スキル名、スキルアイコン、呼び出し名、スキル詳細ページ &#xA;&#xA;Amazonにとってカスタマーへの透明性は非常に重要なものです。これらの問題への対策としては、以下の2つが考えられます。 &#xA;&#xA;A. ブランド所有者が「Rebuild.fm」の知的財産の使用を許可することを明記した署名入りの書面、またはライセンス契約等を提出する。 • 商標、知的財産、ブランドを正当に利用するスキルがある場合、そのスキルの認証を申請する際に、これらの使用許諾を所有することを示し、明示的に証明する。開発者ポータルの「Publishing Information」ページでテスト手順フォームを使用して、必要に応じて外部リンクと連絡先情報を含めてこの情報を入力し、スキルに必要な使用許諾があることを認定チームが判断できるようにする。&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;まあ、そうでしょうね。&lt;/p&gt;&#xA;&lt;h2 id=&#34;やってみてわかったこと&#34;&gt;やってみてわかったこと&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Podcast系は所有者の承認を得ること&lt;/li&gt;&#xA;&lt;li&gt;ステップごとにヘルプ、ストップ、終了して、を認識させること&lt;/li&gt;&#xA;&lt;li&gt;Audio Playerの場合、一時停止、再開を認識させること&lt;/li&gt;&#xA;&lt;li&gt;意外とちゃんとテストしてること&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;参考にコードをgithubに上げときます&#34;&gt;参考にコードをgithubに上げときます&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dongri/alexa-rebuild/&#34;&gt;https://github.com/dongri/alexa-rebuild/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;index.jsがalexa skillで、main.goが rebuildのfeedからxmlをjsonに変換し、mp3をS3にアップロードしてるスクリプトです。&lt;/p&gt;&#xA;&lt;p&gt;以上でした。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
