<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on dongri</title>
    <link>https://dongri.github.io/tags/docker/</link>
    <description>Recent content in Docker on dongri</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 21 Apr 2019 14:40:34 +0900</lastBuildDate>
    <atom:link href="https://dongri.github.io/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Haskellで自分のWebページをリニューアルした</title>
      <link>https://dongri.github.io/2019/04/haskell%E3%81%A7%E8%87%AA%E5%88%86%E3%81%AEweb%E3%83%9A%E3%83%BC%E3%82%B8%E3%82%92%E3%83%AA%E3%83%8B%E3%83%A5%E3%83%BC%E3%82%A2%E3%83%AB%E3%81%97%E3%81%9F/</link>
      <pubDate>Sun, 21 Apr 2019 14:40:34 +0900</pubDate>
      <guid>https://dongri.github.io/2019/04/haskell%E3%81%A7%E8%87%AA%E5%88%86%E3%81%AEweb%E3%83%9A%E3%83%BC%E3%82%B8%E3%82%92%E3%83%AA%E3%83%8B%E3%83%A5%E3%83%BC%E3%82%A2%E3%83%AB%E3%81%97%E3%81%9F/</guid>
      <description>&lt;p&gt;二週間前からHaskellにハマっており、当初は会社のあるサンプルコードをHaskellに書いてみようと思ったのがサーバーのスペックなど考えて諦めて自分のWebページをリニューアルに至ったところです。&lt;/p&gt;&#xA;&lt;p&gt;以下HaskellでWebページの開発、公開まで書いてみようと思います。 &lt;code&gt;Webページ　\= Webシステム&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;開発環境はMac OSXでのDocker for Macです。haskell, dockerのインストールなど省略させてください。&lt;/p&gt;&#xA;&lt;h2 id=&#34;haskellでweb開発&#34;&gt;HaskellでWeb開発？&lt;/h2&gt;&#xA;&lt;p&gt;正気なの？と思う方もいるかと思います、意外とその辺のWebフレームワークは存在してました。&lt;/p&gt;&#xA;&lt;h4 id=&#34;haskell-web-framework&#34;&gt;Haskell Web Framework&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Yesod (&lt;a href=&#34;https://www.yesodweb.com/&#34;&gt;https://www.yesodweb.com/&lt;/a&gt;)&lt;/li&gt;&#xA;&lt;li&gt;Scotty (&lt;a href=&#34;https://github.com/scotty-web/scotty&#34;&gt;https://github.com/scotty-web/scotty&lt;/a&gt;)&lt;/li&gt;&#xA;&lt;li&gt;Miso (&lt;a href=&#34;https://github.com/dmjio/miso&#34;&gt;https://github.com/dmjio/miso&lt;/a&gt;)&lt;/li&gt;&#xA;&lt;li&gt;Servant (&lt;a href=&#34;https://www.servant.dev/&#34;&gt;https://www.servant.dev/&lt;/a&gt;)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;今回はScottyを使うことにしました。Yesodと違ってScottyはWeb API向け軽量フレームワークでhtmlのレンダリングにはまた別のものを用意しなければなりませんでした。レンダリングエンジンもいろいろあるみたいですが、今回はblaze-htmlを使うことにしました。&lt;/p&gt;&#xA;&lt;h2 id=&#34;デプロイサーバー&#34;&gt;デプロイサーバー&lt;/h2&gt;&#xA;&lt;p&gt;もともと自分のWebページはgoogle appengineの無料枠で動かしてました。今回もdockerでappengineでなんとかしようとしてみました。具体的にはgoogle container registryにimageをpushしてappengineからそれをデプロイする方法です。無料枠だとデプロイはやっと成功するが、ページにアクセスするとエラーが出ました。（「サーバーが一時的に停止、30秒後にもう一回試してみろ」のエラーだけどあてにならない）&lt;/p&gt;&#xA;&lt;p&gt;次は自分が持ってるvultr vpsでdocker-composeでなんとか動かせないかと。既にサーバーに別のものが動いていて残りメモリは700MBぐらいでした。そこでdocker-compose up (stack build) したらsshが反応しなくなり、ほかのdocker containerも不正終了されました。&lt;/p&gt;&#xA;&lt;p&gt;諦めようかと思ったが、最後にherokuで試してみようと思いました。調べてみたら、heroku container registryこいつが非常に優秀てgoogle container registryより使い勝手が良かったです。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ heroku container:push web&#xA;$ heroku container:release web&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;この2つのコマンドでデプロイ、リリースが完了です！&lt;/p&gt;&#xA;&lt;h2 id=&#34;herokuのプロセススリープ&#34;&gt;herokuのプロセススリープ&lt;/h2&gt;&#xA;&lt;p&gt;herokuの無料dynoでは一定時間アクセスがないとプロセスを殺して、再びアクセス来る時にプロセスを起動するので、最初の表示に非常に時間かかります。そこはheroku schedulerを使って10分おきにcurlコマンドでサイト起こしてあげることにしました。&lt;/p&gt;&#xA;&lt;h2 id=&#34;https化&#34;&gt;https化&lt;/h2&gt;&#xA;&lt;p&gt;herokuではカスタムドメインの設定できますが、httpsにするには有料プランのdynoを買わないと駄目ぽいです。そこはcloudflareを使うことにしました。&#xA;ネームサーバー変更して数時間待てば反映されます。しかもroot domainもサポートしていてwwwも消すことができます。&lt;/p&gt;&#xA;&lt;h2 id=&#34;感想&#34;&gt;感想&lt;/h2&gt;&#xA;&lt;p&gt;これで完全無料でHaskellでWebページ公開できました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://dongri.org&#34;&gt;https://dongri.org&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;詳細はGitHubのRepo見ればわかるかと思います。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dongri/iam&#34;&gt;https://github.com/dongri/iam&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Rust on Heroku with Docker</title>
      <link>https://dongri.github.io/2016/08/rust-on-heroku-with-docker/</link>
      <pubDate>Tue, 16 Aug 2016 00:42:53 +0900</pubDate>
      <guid>https://dongri.github.io/2016/08/rust-on-heroku-with-docker/</guid>
      <description>&lt;p&gt;Rustで書いたhello rustをherokuに載せてみた。&#xA;普通ならrust用のBuildpack使うのだが、今回はdockerを使うようにした。&#xA;Dockerfile、ソースコードなどはこちら&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dongri/hello-rust&#34;&gt;https://github.com/dongri/hello-rust&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;はじめはalpineで頑張ってみようかと思ったがrustのインストールがうまく行かなくて、ubuntuに変更。&#xA;Dockerfileは以下のようになっている。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;FROM ubuntu:latest&#xA;&#xA;# rust, cargo buildに必要なソフトウェアインストール&#xA;RUN apt-get -y update&#xA;RUN apt-get -y install curl file sudo gcc&#xA;&#xA;# rustのインストール&#xA;RUN curl -sSf https://static.rust-lang.org/rustup.sh | sh&#xA;&#xA;RUN mkdir -p /app&#xA;WORKDIR /app&#xA;COPY . /app&#xA;&#xA;# ビルドして ./target/release/helloバイナリを作る&#xA;RUN cargo build --release&#xA;&#xA;EXPOSE 8080&#xA;&#xA;# 実行&#xA;CMD /app/target/release/hello&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;readmeにも書いてあるがherokuはdockerをサポートしていて、pushするだけでローカルのdockerと&#xA;同じように動かせる。必要なのは、heroku-container-toolsというheroku plugin。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ heroku plugins:install heroku-container-tools&#xA;$ heroku container:push web&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;これでだけでherokuにアップされて動く。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://hello-rust.herokuapp.com/&#34;&gt;https://hello-rust.herokuapp.com/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker Commands</title>
      <link>https://dongri.github.io/2014/11/docker-commands/</link>
      <pubDate>Sat, 29 Nov 2014 11:28:57 +0900</pubDate>
      <guid>https://dongri.github.io/2014/11/docker-commands/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Installing Docker on Mac OS X&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.docker.com/installation/mac/&#34;&gt;https://docs.docker.com/installation/mac/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;boot2ocker start&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ boot2docker start&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;attach&lt;/strong&gt; ( Attach to a running container )&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ docker ps&#xA;CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES&#xA;adead7a08f15        ubuntu:14.04        /bin/bash           About an hour ago   Up 27 minutes                           myubuntu            &#xA;&#xA;$ docker attach myubuntu&#xA;root@adead7a08f15:/#&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;build&lt;/strong&gt; ( Build an image from a Dockerfile )&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ vim Dockerfile&#xA;FROM centos:centos6&#xA;MAINTAINER Dongri Jin&#xA;&#xA;RUN yum update -y &amp;amp;&amp;amp; \&#xA;    rpm --import http://nginx.org/keys/nginx_signing.key &amp;amp;&amp;amp; \&#xA;    yum install -y http://nginx.org/packages/centos/6/noarch/RPMS/nginx-release-centos-6-0.el6.ngx.noarch.rpm &amp;amp;&amp;amp; \&#xA;    yum install -y nginx&#xA;&#xA;EXPOSE 80&#xA;ENTRYPOINT [&amp;#34;/usr/sbin/nginx&amp;#34;, &amp;#34;-g&amp;#34;, &amp;#34;daemon off;&amp;#34;]&#xA;&#xA;$ docker build -t ngix .&#xA;&#xA;$ docker images&#xA;&#xA;$ docker run -d -p 80:80 nginx&#xA;&#xA;$ VBoxManage controlvm &amp;#34;boot2docker-vm&amp;#34; natpf1 &amp;#34;nginx,tcp,127.0.0.1,8080,,80&amp;#34;&#xA;&#xA;$ open http://localhost:8080&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;commit&lt;/strong&gt; ( Create a new image from a container&amp;rsquo;s changes )&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ docker run -i -t -d nginx                       &#xA;ea21748dddd379d8959373cd366b1eb10f4193a68c530c3539fe110b0531bd22&#xA;&#xA;$ docker  docker ps&#xA;CONTAINER ID        IMAGE               COMMAND                CREATED             STATUS              PORTS               NAMES&#xA;ea21748dddd3        nginx:latest        /usr/sbin/nginx -g &amp;#39;   About an hour ago   Up 3 seconds        80/tcp              tender_fermi        &#xA;&#xA;$ docker commit ea21748dddd3 my-nginx&#xA;69f023fe647655f984afd0617dd1e65d8b9a2e5e551bac32af5e6436bfe3ac70&#xA;&#xA;$ docker images&#xA;REPOSITORY          TAG                 IMAGE ID            CREATED             VIRTUAL SIZE&#xA;my-nginx            latest              69f023fe6476        About an hour ago   267.8 MB&#xA;nginx               latest              9bc094d3c806        About an hour ago   267.8 MB&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;cp&lt;/strong&gt; ( Copy files/folders from a container&amp;rsquo;s filesystem to the host path )&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ docker run -d nginx&#xA;69e4211b565349631845e984a5914688a250671764c98c959236fb53d059a709&#xA;&#xA;$ docker ps&#xA;CONTAINER ID        IMAGE               COMMAND                CREATED             STATUS              PORTS               NAMES&#xA;69e4211b5653        nginx:latest        /usr/sbin/nginx -g &amp;#39;   About an hour ago   Up 1 seconds        80/tcp              distracted_curie    &#xA;&#xA;$ docker cp 69e4211b5653:/usr/share/nginx/html/index.html ./&#xA;&#xA;$ ls -l&#xA;total 16&#xA;-rw-r--r--  1 dongri  staff  332 Nov 29 17:41 Dockerfile&#xA;-rw-r--r--  1 dongri  staff  612 Sep 16 22:57 index.html&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;diff&lt;/strong&gt; ( Inspect changes on a container&amp;rsquo;s filesystem )&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ docker ps&#xA;CONTAINER ID        IMAGE               COMMAND                CREATED             STATUS              PORTS               NAMES&#xA;69e4211b5653        nginx:latest        /usr/sbin/nginx -g &amp;#39;   About an hour ago   Up 3 minutes        80/tcp              distracted_curie    &#xA;&#xA;$ docker diff 69e4211b5653&#xA;C /var&#xA;C /var/cache&#xA;C /var/cache/nginx&#xA;A /var/cache/nginx/client_temp&#xA;A /var/cache/nginx/fastcgi_temp&#xA;A /var/cache/nginx/proxy_temp&#xA;A /var/cache/nginx/scgi_temp&#xA;A /var/cache/nginx/uwsgi_temp&#xA;C /var/run&#xA;A /var/run/nginx.pid&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;events&lt;/strong&gt; ( Get real time events from the server )&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ docker events&#xA;[2014-11-29 17:09:17 +0900 JST] d9860be76a657a: (from my-nginx:latest) create&#xA;[2014-11-29 17:09:17 +0900 JST] d9860be76a657a: (from my-nginx:latest) start&#xA;[2014-11-29 17:09:17 +0900 JST] d9860be76a657a: (from my-nginx:latest) die&#xA;[2014-11-29 17:09:42 +0900 JST] 94d8ff9c9b006b: (from nginx:latest) create&#xA;[2014-11-29 17:09:42 +0900 JST] 94d8ff9c9b006b: (from nginx:latest) start&#xA;[2014-11-29 17:10:19 +0900 JST] 94d8ff9c9b006b: (from nginx:latest) die&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;export&lt;/strong&gt; ( Stream the contents of a container as a tar archive)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ docker ps&#xA;CONTAINER ID        IMAGE               COMMAND                CREATED             STATUS              PORTS               NAMES&#xA;69e4211b5653        nginx:latest        /usr/sbin/nginx -g &amp;#39;   About an hour ago   Up 9 minutes        80/tcp              distracted_curie    &#xA;&#xA;$ docker export 69e4211b5653 &amp;gt; nginx.tar&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;history&lt;/strong&gt; ( Show the history of an image )&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ docker history nginx&#xA;IMAGE               CREATED             CREATED BY                                      SIZE&#xA;9bc094d3c806        About an hour ago   /bin/sh -c #(nop) ENTRYPOINT [/usr/sbin/nginx   0 B&#xA;bc8b862f52f2        About an hour ago   /bin/sh -c #(nop) EXPOSE map[80/tcp:{}]         0 B&#xA;6a7c1a5d6e92        About an hour ago   /bin/sh -c yum update -y &amp;amp;&amp;amp;     rpm --import    52.02 MB&#xA;7becd8731a8d        About an hour ago   /bin/sh -c #(nop) MAINTAINER Dongri Jin         0 B&#xA;70441cac1ed5        3 weeks ago         /bin/sh -c #(nop) ADD file:87e3d5074ec1720805   215.8 MB&#xA;5b12ef8fd570        8 weeks ago         /bin/sh -c #(nop) MAINTAINER The CentOS Proje   0 B&#xA;511136ea3c5a        17 months ago                                                       0 B&#xA;&#xA;$  &#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;images&lt;/strong&gt; ( List images )&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ docker images&#xA;REPOSITORY          TAG                 IMAGE ID            CREATED             VIRTUAL SIZE&#xA;my-nginx            latest              69f023fe6476        About an hour ago   267.8 MB&#xA;nginx               latest              9bc094d3c806        About an hour ago   267.8 MB&#xA;centos              centos6             70441cac1ed5        3 weeks ago         215.8 MB&#xA;ubuntu              14.04               c4ff7513909d        3 months ago        225.4 MB&#xA;ubuntu              latest              c4ff7513909d        3 months ago        225.4 MB&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;import&lt;/strong&gt; ( Create a new filesystem image from the contents of a tarball )&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ cat nginx.tar | docker import - nginx:import                                                                                                                                                    254714ba37221092c47f22a886c7f7497ed65da53d42cf24a4f44e0054305af4&#xA;&#xA;$ docker images&#xA;REPOSITORY          TAG                 IMAGE ID            CREATED             VIRTUAL SIZE&#xA;nginx               import              254714ba3722        About an hour ago   242.8 MB&#xA;my-nginx            latest              69f023fe6476        About an hour ago   267.8 MB&#xA;nginx               latest              9bc094d3c806        About an hour ago   267.8 MB&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;info&lt;/strong&gt; ( Display system-wide information )&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ docker info&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;inspect&lt;/strong&gt; ( Return low-level information on a container )&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ docker inspect 69e4211b5653&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;kill&lt;/strong&gt; ( Kill a running container )&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ docker ps                        &#xA;CONTAINER ID        IMAGE               COMMAND                CREATED             STATUS              PORTS               NAMES&#xA;69e4211b5653        nginx:latest        /usr/sbin/nginx -g &amp;#39;   About an hour ago   Up 23 minutes       80/tcp              distracted_curie    &#xA;&#xA;$ docker kill 69e4211b5653&#xA;69e4211b5653&#xA;&#xA;$ docker ps&#xA;CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;load&lt;/strong&gt; ( Load an image from a tar archive )&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ docker load &amp;lt; nginx.tar&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;login&lt;/strong&gt; ( Register or log in to the Docker registry server )&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ docker login&#xA;Username: dongri&#xA;Password: ***&#xA;Email: ***@gmail.com&#xA;Login Succeeded&#xA;&#xA;$ docker pull ubuntu&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;logs&lt;/strong&gt; ( Fetch the logs of a container )&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ docker logs 108233ba9a1d&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;port&lt;/strong&gt; ( Lookup the public-facing port that is NAT-ed to PRIVATE_PORT )&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ docker run -d -p 80:80 nginx&#xA;108233ba9a1df0aa199a8392d052f3c0cd8e7929bdeff6d5fa52ac47a75aa603&#xA;&#xA;$ docker port 108233ba9a1d 80&#xA;0.0.0.0:80&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;pause&lt;/strong&gt; ( Pause all processes within a container )&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ docker pause 108233ba9a1d&#xA;108233ba9a1d&#xA;&#xA;$ open http://localhost:8080&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;ps&lt;/strong&gt; ( List containers )&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ docker ps&#xA;&#xA;$ docker ps -a&#xA;&#xA;$ docker ps -a -q&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;pull&lt;/strong&gt; ( Pull an image or a repository from a Docker registry server )&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ docker pull golang:1.4rc1&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;push&lt;/strong&gt; ( Push an image or a repository to a Docker registry server )&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ docker run -i -t -d golang&#xA;921dc8b1555af7507f8669883724047b4cc114be0681a07f86def&#xA;&#xA;$ docker ps&#xA;CONTAINER ID        IMAGE               COMMAND                CREATED             STATUS                   PORTS                NAMES&#xA;16f79ec35b99        golang:latest       /bin/bash              About an hour ago   Up 4 seconds                                  focused_newton      &#xA;108233ba9a1d        nginx:latest        /usr/sbin/nginx -g &amp;#39;   About an hour ago   Up 15 minutes (Paused)   0.0.0.0:80-&amp;gt;80/tcp   nostalgic_almeida   &#xA;&#xA;$ docker commit 16f79ec35b99 dongri/golang&#xA;da5a0042ad9ac478c38fc743c8f981f292a9aefd41ac54276a6617c319719ad1&#xA;&#xA;$ docker images&#xA;REPOSITORY          TAG                 IMAGE ID            CREATED             VIRTUAL SIZE&#xA;dongri/golang       latest              da5a0042ad9a        About an hour ago   448 MB&#xA;nginx               import              254714ba3722        About an hour ago   242.8 MB&#xA;my-nginx            latest              69f023fe6476        2 hours ago         267.8 MB&#xA;nginx               latest              9bc094d3c806        2 hours ago         267.8 MB&#xA;golang              1.4rc1              a9e27473d0f8        2 days ago          467.7 MB&#xA;golang              latest              ebd3fd90ae2e        2 days ago          448 MB&#xA;&#xA;$ docker push dongri/golang&#xA;The push refers to a repository [dongri/golang] (len: 1)&#xA;Sending image list&#xA;Pushing repository dongri/golang (1 tags)&#xA;511136ea3c5a: Image already pushed, skipping&#xA;36fd425d7d8a: Image already pushed, skipping&#xA;aaabd2b41e22: Image already pushed, skipping&#xA;cd9d7733886c: Image already pushed, skipp&#xA;da5a0042ad9a: Image successfully pushed&#xA;Pushing tag for rev [da5a0042ad9a] on {https://cdn-registry-1.docker.io/v1/repositories/dongri/golang/tags/latest}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;restart&lt;/strong&gt; ( Restart a running container )&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ docker ps&#xA;CONTAINER ID        IMAGE               COMMAND                CREATED             STATUS                   PORTS                NAMES&#xA;16f79ec35b99        golang:latest       /bin/bash              About an hour ago   Up 3 minutes                                  focused_newton      &#xA;108233ba9a1d        nginx:latest        /usr/sbin/nginx -g &amp;#39;   About an hour ago   Up 18 minutes (Paused)   0.0.0.0:80-&amp;gt;80/tcp   nostalgic_almeida   &#xA;&#xA;$ docker restart 16f79ec35b99&#xA;16f79ec35b99&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;rm&lt;/strong&gt; ( Remove one or more containers )&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ docker ps -a&#xA;CONTAINER ID        IMAGE               COMMAND                CREATED             STATUS&#xA;16f79ec35b99        golang:latest       /bin/bash              About an hour ago   Up 55 seconds&#xA;714a086c9e4d        golang:latest       /bin/bash              About an hour ago   Exited (1) 4 minutes ago&#xA;&#xA;$ docker rm 714a086c9e4d&#xA;714a086c9e4d&#xA;&#xA;$ docker ps -a          &#xA;CONTAINER ID        IMAGE               COMMAND                CREATED             STATUS&#xA;16f79ec35b99        golang:latest       /bin/bash              About an hour ago   Up About a minute&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;rmi&lt;/strong&gt; ( Remove one or more images )&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ docker images&#xA;REPOSITORY          TAG                 IMAGE ID            CREATED             VIRTUAL SIZE&#xA;dongri/golang       latest              da5a0042ad9a        About an hour ago   448 MB&#xA;nginx               import              254714ba3722        About an hour ago   242.8 MB&#xA;my-nginx            latest              69f023fe6476        2 hours ago         267.8 MB&#xA;&#xA;$ docker rmi 69f023fe6476&#xA;&#xA;$ docker images&#xA;REPOSITORY          TAG                 IMAGE ID            CREATED             VIRTUAL SIZE&#xA;dongri/golang       latest              da5a0042ad9a        About an hour ago   448 MB&#xA;nginx               import              254714ba3722        About an hour ago   242.8 MB&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;run&lt;/strong&gt; ( Run a command in a new container )&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ docker run -d nginx&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;save&lt;/strong&gt; ( Save an image to a tar archive )&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ docker images&#xA;REPOSITORY          TAG                 IMAGE ID            CREATED             VIRTUAL SIZE&#xA;dongri/golang       latest              da5a0042ad9a        About an hour ago   448 MB&#xA;nginx               import              254714ba3722        About an hour ago   242.8 MB&#xA;&#xA;$ docker save nginx &amp;gt; mynginx.tar&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;search&lt;/strong&gt; ( Search for an image on the Docker Hub )&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ docker search dongri&#xA;NAME            DESCRIPTION   STARS     OFFICIAL   AUTOMATED&#xA;dongri/coreos                 2                    &#xA;dongri/node                   1                    &#xA;dongri/nginx                  0                    &#xA;dongri/redis                  0                    &#xA;dongri/golang                 0&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;start&lt;/strong&gt; ( Start a stopped container )&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker ps -a&#xA;CONTAINER ID        IMAGE               COMMAND                CREATED             STATUS                           PORTS&#xA;108233ba9a1d        nginx:latest        /usr/sbin/nginx -g &amp;#39;   About an hour ago   Up 27 minutes (Paused)           0.0.0.0:80-&amp;gt;80/tcp&#xA;269367b4bd87        nginx:latest        /usr/sbin/nginx -g &amp;#39;   About an hour ago   Exited (-1) 28 minutes ago&#xA;&#xA;$ docker start 269367b4bd87&#xA;269367b4bd87&#xA;&#xA;$ docker ps&#xA;CONTAINER ID        IMAGE               COMMAND                CREATED             STATUS                   PORTS                NAMES&#xA;108233ba9a1d        nginx:latest        /usr/sbin/nginx -g &amp;#39;   About an hour ago   Up 27 minutes (Paused)   0.0.0.0:80-&amp;gt;80/tcp   nostalgic_almeida   &#xA;269367b4bd87        nginx:latest        /usr/sbin/nginx -g &amp;#39;   About an hour ago   Up 2 seconds             80/tcp               kickass_perlman     &#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;stop&lt;/strong&gt; ( Stop a running container )&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ docker ps&#xA;CONTAINER ID        IMAGE               COMMAND                CREATED             STATUS                   PORTS                NAMES&#xA;108233ba9a1d        nginx:latest        /usr/sbin/nginx -g &amp;#39;   About an hour ago   Up 27 minutes (Paused)   0.0.0.0:80-&amp;gt;80/tcp   nostalgic_almeida   &#xA;269367b4bd87        nginx:latest        /usr/sbin/nginx -g &amp;#39;   About an hour ago   Up 2 seconds             80/tcp               kickass_perlman     &#xA;&#xA;$ docker stop 269367b4bd87&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;tag&lt;/strong&gt; ( Tag an image into a repository )&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ docker images&#xA;REPOSITORY          TAG                 IMAGE ID            CREATED             VIRTUAL SIZE&#xA;dongri/golang       latest              da5a0042ad9a        About an hour ago   448 MB&#xA;nginx               import              254714ba3722        About an hour ago   242.8 MB&#xA;&#xA;$ docker tag 254714ba3722 nginx:export&#xA;$ docker images&#xA;REPOSITORY          TAG                 IMAGE ID            CREATED             VIRTUAL SIZE&#xA;dongri/golang       latest              da5a0042ad9a        About an hour ago   448 MB&#xA;nginx               import              254714ba3722        About an hour ago   242.8 MB&#xA;nginx               export              254714ba3722        About an hour ago   242.8 MB&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;top&lt;/strong&gt; ( Lookup the running processes of a container )&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ docker ps&#xA;CONTAINER ID        IMAGE               COMMAND                CREATED             STATUS                   PORTS                NAMES&#xA;108233ba9a1d        9bc094d3c806        /usr/sbin/nginx -g &amp;#39;   About an hour ago   Up 38 minutes (Paused)   0.0.0.0:80-&amp;gt;80/tcp   nostalgic_almeida   &#xA;&#xA;$ docker top 108233ba9a1d&#xA;PID                 USER                COMMAND&#xA;1658                root                nginx: master process /usr/sbin/nginx -g daemon off;&#xA;1668                499                 nginx: worker process&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;unpause&lt;/strong&gt; ( Unpause a paused container )&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ docker ps&#xA;CONTAINER ID        IMAGE               COMMAND                CREATED             STATUS                   PORTS                NAMES&#xA;108233ba9a1d        9bc094d3c806        /usr/sbin/nginx -g &amp;#39;   About an hour ago   Up 38 minutes (Paused)   0.0.0.0:80-&amp;gt;80/tcp   nostalgic_almeida   &#xA;&#xA;$ docker unpause 108233ba9a1d&#xA;108233ba9a1d&#xA;&#xA;$ open http://localhost:8080&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;version&lt;/strong&gt; ( Show the Docker version information )&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ docker version&#xA;Client version: 1.1.1&#xA;Client API version: 1.13&#xA;Go version (client): go1.2.1&#xA;Git commit (client): bd609d2&#xA;Server version: 1.1.2&#xA;Server API version: 1.13&#xA;Go version (server): go1.2.1&#xA;Git commit (server): d84a070&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;wait&lt;/strong&gt; ( Block until a container stops, then print its exit code )&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ docker wait 108233ba9a1d&#xA;&#xA;$ docker stop 108233ba9a1d&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Docker Install</title>
      <link>https://dongri.github.io/2014/06/docker-install/</link>
      <pubDate>Tue, 17 Jun 2014 11:28:57 +0900</pubDate>
      <guid>https://dongri.github.io/2014/06/docker-install/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://docs.docker.com/installation/mac/&#34; title=&#34;docker install&#34;&gt;https://docs.docker.com/installation/mac/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;youtube動画通りにダウンロードしてインストールする。&lt;/p&gt;&#xA;&lt;p&gt;applicationsに入ったappアイコンをクリックするとboot2dockerがinit, start, DOCKER_HOSTまで設定してくれるので、作業はそのまま進められる。&lt;/p&gt;&#xA;&lt;p&gt;もしくはboot2dockerコマンドで一から作りなおしてもいい。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;➜  ~  boot2docker init&#xA;➜  ~  boot2docker start&#xA;➜  ~  export DOCKER_HOST=tcp://:2375&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;exportの部分は.zshrcとかに入れとけば毎回設定する必要なくなる。&#xA;DOCKER_HOST正しく設定されないと以下のエラーが出る。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;2014/06/17 22:07:38 Cannot connect to the Docker daemon. Is &amp;#39;docker -d&amp;#39; running on this host?&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;dockerコマンドを確認してみる&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;➜  ~  docker version&#xA;Client version: 1.0.0&#xA;Client API version: 1.12&#xA;Go version (client): go1.2.1&#xA;Git commit (client): 63fe64c&#xA;Server version: 1.0.0&#xA;Server API version: 1.12&#xA;Go version (server): go1.2.1&#xA;Git commit (server): 63fe64c&#xA;➜  ~  docker images&#xA;REPOSITORY           TAG                 IMAGE ID            CREATED             VIRTUAL SIZE&#xA;centos               centos6             0c752394b855        7 days ago          124.1 MB&#xA;centos               latest              0c752394b855        7 days ago          124.1 MB&#xA;➜  ~  &#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Docker Nginx</title>
      <link>https://dongri.github.io/2014/06/docker-nginx/</link>
      <pubDate>Tue, 17 Jun 2014 11:28:57 +0900</pubDate>
      <guid>https://dongri.github.io/2014/06/docker-nginx/</guid>
      <description>&lt;p&gt;インストール終わったので、nginxを構築してみる。&lt;/p&gt;&#xA;&lt;h3 id=&#34;dockerfileを作成する&#34;&gt;Dockerfileを作成する。&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ vim Dockerfile&#xA;FROM centos&#xA;MAINTAINER Dongri Jin&#xA;&#xA;RUN yum update -y &amp;amp;&amp;amp; \&#xA;    rpm --import http://nginx.org/keys/nginx_signing.key &amp;amp;&amp;amp; \&#xA;    yum install -y http://nginx.org/packages/centos/6/noarch/RPMS/nginx-release-centos-6-0.el6.ngx.noarch.rpm &amp;amp;&amp;amp; \&#xA;    yum install -y nginx&#xA;&#xA;ADD conf.d/default.conf /etc/nginx/conf.d/default.conf&#xA;&#xA;ADD html /var/app/nginx/html&#xA;&#xA;EXPOSE 80&#xA;ENTRYPOINT [&amp;#34;/usr/sbin/nginx&amp;#34;, &amp;#34;-g&amp;#34;, &amp;#34;daemon off;&amp;#34;]&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Dockerfileは以下の流れになる。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;centos imageをダウンロード&lt;/li&gt;&#xA;&lt;li&gt;yumでnginxをインストール&lt;/li&gt;&#xA;&lt;li&gt;host(osx)のconfファイルをnginx containerのconfに置き換え&lt;/li&gt;&#xA;&lt;li&gt;host(osx)のhtmlフィルダをnginx containerのhtmlソースフォルダにコピー&lt;/li&gt;&#xA;&lt;li&gt;80番portを開放&lt;/li&gt;&#xA;&lt;li&gt;作成されたコンテナ起動(nginx)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;ビルド&#34;&gt;ビルド&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ docker build -t dongri/nginx .&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;container名を[username]/[imagename]にしたのはdocker hubに公開するため。&lt;/p&gt;&#xA;&lt;h3 id=&#34;起動&#34;&gt;起動&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ docker run -p 80:80 -d dongri/nginx&#xA;6358e578f3072e4e32d057647b5dbe63b34d0dfc07e46a497241498f27cf3e88&#xA;$ curl 192.168.59.103&#xA;hello World!&amp;lt;br/&amp;gt;&#xA;path: /var/app/nginx/html/index.html&#xA;$&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;-p は host port : container port&lt;/li&gt;&#xA;&lt;li&gt;-d バックグラウンドで起動&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;ここでdockerのipを指定したが、localhostも可能。ただし、port forwardingが必要。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker node</title>
      <link>https://dongri.github.io/2014/06/docker-node/</link>
      <pubDate>Tue, 17 Jun 2014 11:28:57 +0900</pubDate>
      <guid>https://dongri.github.io/2014/06/docker-node/</guid>
      <description>&lt;p&gt;続いてnodejsをやってみる。&lt;/p&gt;&#xA;&lt;h3 id=&#34;dockerfileを作成する&#34;&gt;Dockerfileを作成する。&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ vim Dockerfile&#xA;FROM centos:6.4                                                                                                                                                                                                                               &#xA;MAINTAINER Dongri Jin&#xA;&#xA;RUN yum update -y&#xA;RUN rpm -Uvh http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm&#xA;RUN yum install -y npm&#xA;&#xA;ADD nodejs /var/app/nodejs&#xA;&#xA;RUN npm install -g nodemon&#xA;RUN cd /var/app/nodejs; npm install&#xA;&#xA;EXPOSE 3000&#xA;CMD [&amp;#34;node&amp;#34;, &amp;#34;/var/app/nodejs/index.js&amp;#34;]&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;node環境構築する&#34;&gt;node環境構築する。&lt;/h3&gt;&#xA;&lt;p&gt;nodejsディレクトリの下に、package.jsonとindex.jsを作成&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ vim nodejs/package.json&#xA;{&#xA;  &amp;#34;name&amp;#34;: &amp;#34;docker-node&amp;#34;,&#xA;  &amp;#34;private&amp;#34;: true,&#xA;  &amp;#34;version&amp;#34;: &amp;#34;0.0.1&amp;#34;,&#xA;  &amp;#34;description&amp;#34;: &amp;#34;Node.js on Docker&amp;#34;,&#xA;  &amp;#34;author&amp;#34;: &amp;#34;Dongri Jin &amp;lt;dongriab@gmail.com&amp;gt;&amp;#34;,&#xA;  &amp;#34;dependencies&amp;#34;: {&#xA;    &amp;#34;express&amp;#34;: &amp;#34;4.4.3&amp;#34;&#xA;  }&#xA;}&#xA;&#xA;$ vim nodejs/index.js&#xA;var express = require(&amp;#39;express&amp;#39;);&#xA;&#xA;var PORT = 3000;&#xA;&#xA;var app = express();&#xA;app.get(&amp;#39;/&amp;#39;, function (req, res) {&#xA;  res.send(&amp;#39;Hello Node.js\n&amp;#39;);&#xA;});&#xA;&#xA;app.listen(PORT);&#xA;console.log(&amp;#39;Express server listening on port &amp;#39; + PORT);&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;ビルド--サーバー起動&#34;&gt;ビルド &amp;amp; サーバー起動&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ docker build -t dongri/node .&#xA;$ docker run -p 3000:3000 -i -t dongri/node&#xA;Express server listening on port 3000&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ブラウザから http://192.168.59.103:3000 アクセスしてみる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker Sharing</title>
      <link>https://dongri.github.io/2014/06/docker-sharing/</link>
      <pubDate>Tue, 17 Jun 2014 11:28:57 +0900</pubDate>
      <guid>https://dongri.github.io/2014/06/docker-sharing/</guid>
      <description>&lt;p&gt;dockerインストールしてみた、docker触ってみたい、dockerでnginx立ててみた、&#xA;dockerでwordpressやってみた、とかとか。結局、日常開発でどう使えばいいんだっけ？の質問の答えに&#xA;なってない。&lt;/p&gt;&#xA;&lt;p&gt;開発環境がLinux、Ubuntuでvim派だと docker run 時に -v オプション付けてhostとcontainerの&#xA;リソースを共有できるが、開発環境がMacだと間にVMが挟んでるのでややこしくなる。&lt;/p&gt;&#xA;&lt;p&gt;Vagrant使ったことある方は、vm.synced_folder 一発で解決できるんじゃないと思うかも知りませんが、&#xA;boot2dockerではカスタムvagrant boxを使わないとできないみたい。&lt;/p&gt;&#xA;&lt;p&gt;boot2dockerが推奨してるのは、sambaサーバー経由でフォルダ共有ということなので、設定してみた。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ docker run -v /var/app/ --name app busybox&#xA;$ docker run --name app-samba --rm -v /usr/local/bin/docker:/docker -v /var/run/docker.sock:/docker.sock svendowideit/samba app&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ここまでやると、finderから cifs://192.168.59.103, smb://192.168.59.103 にアクセスして、Guestユーザーで/var/appに入れる。&lt;/p&gt;&#xA;&lt;p&gt;docker-nginx, docker-nodeで、ソースフォルダを /var/app/nginx/html, /var/app/nodejs にした理由もここにある。&lt;/p&gt;&#xA;&lt;p&gt;nginx、nodeをsambaサーバーのVolumesを使って起動する&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;### nodeの例：&#xA;$ docker run -p 3000:3000 --volumes-from samba-server -i -t dongri/node bash&#xA;bash-4.1# cd /var/app/nodejs/&#xA;bash-4.1# npm install&#xA;bash-4.1# nodemon index.js&#xA;17 Jun 08:12:18 - [nodemon] v1.2.0&#xA;17 Jun 08:12:18 - [nodemon] to restart at any time, enter `rs`&#xA;17 Jun 08:12:18 - [nodemon] watching: *.*&#xA;17 Jun 08:12:18 - [nodemon] starting `node index.js`&#xA;Express server listening on port 3000&#xA;&#xA;### nginxの例：&#xA;$ docker run -p 80:80 --volumes-from samba-server -i -t dongri/nginx&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ここまでやったら、macから/var/appにソースを入れて好きなように開発できる。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
