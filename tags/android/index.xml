<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Android on dongri</title>
    <link>https://dongri.github.io/tags/android/</link>
    <description>Recent content in Android on dongri</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 13 Apr 2018 03:13:44 +0800</lastBuildDate>
    <atom:link href="https://dongri.github.io/tags/android/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>非認証Android端末をGoogle認証通す方法</title>
      <link>https://dongri.github.io/2018/04/%E9%9D%9E%E8%AA%8D%E8%A8%BCandroid%E7%AB%AF%E6%9C%AB%E3%82%92google%E8%AA%8D%E8%A8%BC%E9%80%9A%E3%81%99%E6%96%B9%E6%B3%95/</link>
      <pubDate>Fri, 13 Apr 2018 03:13:44 +0800</pubDate>
      <guid>https://dongri.github.io/2018/04/%E9%9D%9E%E8%AA%8D%E8%A8%BCandroid%E7%AB%AF%E6%9C%AB%E3%82%92google%E8%AA%8D%E8%A8%BC%E9%80%9A%E3%81%99%E6%96%B9%E6%B3%95/</guid>
      <description>&lt;p&gt;突然Kyashが使えなくなった。&lt;/p&gt;&#xA;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;&#xA;&lt;p&gt;この端末はRoot取ってないのでおそらくGoogleの認定を受けてない端末だからでしょう。Play Storeアプリ開いて設定見ると端末の認証のところが認証されてませんと出る。&lt;/p&gt;&#xA;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.android.com/certified/partners/&#34;&gt;https://www.android.com/certified/partners/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;自分の端末はsmartisanという中国の端末で上のパートナー一覧には載ってなかった。&lt;/p&gt;&#xA;&lt;p&gt;確かにこの前この辺のニュースも出て、将来はGoogleのアプリ（Gmail, Chromeなど）も認証されてない端末では動かないようにする予定。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.google.com/android/uncertified/&#34;&gt;https://www.google.com/android/uncertified/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;上のリンク先にカスタムROMをインストールした端末はAndroid IDを入れるといいらしいが、自分の端末はちょっと違う。試しにAndroid IDを入れてみたら通った。Kyashも正しく起動してくれた。&lt;/p&gt;&#xA;&lt;p&gt;Android IDはどう取得するのか？上のページでは adb コマンドで取得すると書いてあるが、そもそもRoot取ってないのでこの方法だとだめで、違う方法でAndroid IDを取得しないといけない。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;String androidId = Settings.Secure.getString(getContext().getContentResolver(), Settings.Secure.ANDROID_ID);&#xA;System.out.println(androidId);&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Android開発環境でこのようなコードで取得できるが、エンジニアじゃないと無理だろう。せっかくなのでAndroid IDだけを表示するアプリを作ってPlay Storeに公開した。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=org.dongri.androidid&#34;&gt;https://play.google.com/store/apps/details?id=org.dongri.androidid&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;追記&#34;&gt;追記&lt;/h3&gt;&#xA;&lt;p&gt;あとでPlay StoreでAndroid IDで検索してみたらアプリが大量に出てきたｗ&lt;/p&gt;</description>
    </item>
    <item>
      <title>Progressive Web Apps</title>
      <link>https://dongri.github.io/2018/01/progressive-web-apps/</link>
      <pubDate>Wed, 10 Jan 2018 12:12:06 +0900</pubDate>
      <guid>https://dongri.github.io/2018/01/progressive-web-apps/</guid>
      <description>&lt;p&gt;PWA(Progressive Web Apps)とは、WebページをネイティブアプリのようなUXを提供するためのものです。&lt;/p&gt;&#xA;&lt;p&gt;なんでこれを思い出したかと言うと &lt;a href=&#34;https://doper.io&#34;&gt;https://doper.io&lt;/a&gt; というWebサイトを開発していて、iOSクライアントは去年なんとか作りましたが、Androidはなかなか手が出せなくて、今年に入ってなんとかしようと思いPWAがいいんじゃないかと思いました。&lt;/p&gt;&#xA;&lt;h2 id=&#34;条件&#34;&gt;条件&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Webサイトがhttps対応してること&lt;/li&gt;&#xA;&lt;li&gt;Android Chromeが必要&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;対応&#34;&gt;対応&lt;/h2&gt;&#xA;&lt;h3 id=&#34;manifestjson&#34;&gt;manifest.json&lt;/h3&gt;&#xA;&lt;p&gt;manifest.jsonファイル作成します。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;{&#xA;    lang: &amp;#34;ja&amp;#34;,&#xA;    name: &amp;#34;Doper Lite&amp;#34;,&#xA;    short_name: &amp;#34;Doper Lite&amp;#34;,&#xA;    start_url: &amp;#34;/&amp;#34;,&#xA;    display: &amp;#34;standalone&amp;#34;,&#xA;    theme_color: &amp;#34;#24292e&amp;#34;,&#xA;    icons: [&#xA;        {&#xA;            src: &amp;#34;/img/launcher-icon48.png&amp;#34;,&#xA;            sizes: &amp;#34;48x48&amp;#34;,&#xA;            type: &amp;#34;image/png&amp;#34;&#xA;        },&#xA;        {&#xA;            src: &amp;#34;/img/launcher-icon-72.png&amp;#34;,&#xA;            sizes: &amp;#34;72x72&amp;#34;,&#xA;            type: &amp;#34;image/png&amp;#34;&#xA;        },&#xA;        {&#xA;            src: &amp;#34;/img/launcher-icon-96.png&amp;#34;,&#xA;            sizes: &amp;#34;96x96&amp;#34;,&#xA;            type: &amp;#34;image/png&amp;#34;&#xA;        },&#xA;        {&#xA;            src: &amp;#34;/img/launcher-icon-144.png&amp;#34;,&#xA;            sizes: &amp;#34;144x144&amp;#34;,&#xA;            type: &amp;#34;image/png&amp;#34;&#xA;        },&#xA;        {&#xA;            src: &amp;#34;/img/launcher-icon-192.png&amp;#34;,&#xA;            sizes: &amp;#34;192x192&amp;#34;,&#xA;            type: &amp;#34;image/png&amp;#34;&#xA;        }&#xA;    ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;a href=&#34;https://www.w3.org/TR/appmanifest/&#34;&gt;https://www.w3.org/TR/appmanifest/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>iOS, Android アプリダウンロード数を取得</title>
      <link>https://dongri.github.io/2017/12/ios-android-%E3%82%A2%E3%83%97%E3%83%AA%E3%83%80%E3%82%A6%E3%83%B3%E3%83%AD%E3%83%BC%E3%83%89%E6%95%B0%E3%82%92%E5%8F%96%E5%BE%97/</link>
      <pubDate>Tue, 19 Dec 2017 15:38:35 +0900</pubDate>
      <guid>https://dongri.github.io/2017/12/ios-android-%E3%82%A2%E3%83%97%E3%83%AA%E3%83%80%E3%82%A6%E3%83%B3%E3%83%AD%E3%83%BC%E3%83%89%E6%95%B0%E3%82%92%E5%8F%96%E5%BE%97/</guid>
      <description>&lt;p&gt;App Annie、Search Manなどサービスを使えばAPI経由でアプリのダウンロード数を取得する方法いろいろあるようだが、iTunesconnectとPlay Storeから直接取得してみた。&lt;/p&gt;&#xA;&lt;h1 id=&#34;ios-reporter&#34;&gt;iOS Reporter&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://help.apple.com/itc/appsreporterguide/#/itc0f2481229&#34;&gt;https://help.apple.com/itc/appsreporterguide/#/itc0f2481229&lt;/a&gt; ここからReporter.zipをダウンロード。&lt;/p&gt;&#xA;&lt;h3 id=&#34;1-access-tokenをitunesconnectページで発行する&#34;&gt;1. access tokenをitunesconnectページで発行する。&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://reportingitc2.apple.com/reports.html&#34;&gt;https://reportingitc2.apple.com/reports.html&lt;/a&gt; ページの左にに「レポートについて？」があるので？マークをクリックして「アクセストークン生成」リンクがクリックして生成する。&lt;/p&gt;&#xA;&lt;h3 id=&#34;2-reporterpropertiesを編集&#34;&gt;2. Reporter.propertiesを編集&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;AccessToken=********-****-****-****-************&#xA;&#xA;Mode=Normal&#xA;&#xA;SalesUrl=https://reportingitc-reporter.apple.com/reportservice/sales/v1&#xA;FinanceUrl=https://reportingitc-reporter.apple.com/reportservice/finance/v1&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;3-javaでレポート取得&#34;&gt;3. javaでレポート取得&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ java -jar Reporter.jar p=Reporter.properties Sales.getVendors&#xA;********&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;上で取得したVendor Numberを設定&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;DATE=&amp;#34;20171216&amp;#34;&#xA;VENDOR_NUMBER=&amp;#34;********&amp;#34;&#xA;$ java -jar Reporter.jar p=Reporter.properties Sales.getReport ${VENDOR_NUMBER}, Sales, Summary, Daily, ${DATE}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;4-レポート形式&#34;&gt;4. レポート形式&lt;/h3&gt;&#xA;&lt;p&gt;ドキュメントのリンク切れたりして正確なドキュメント見つかってないが、tvsファイルの&#xA;Product Type Identifierが1のものが新規ダウンロードらしい。&#xA;あとはファイルをshellか、何かで読んでunitsを出せば日付別に新規ダウンロード数取得できる。&lt;/p&gt;&#xA;&lt;h1 id=&#34;android&#34;&gt;Android&lt;/h1&gt;&#xA;&lt;h3 id=&#34;1-google-cloud-sdkダウンロード初期化&#34;&gt;1. Google Cloud SDKダウンロード、初期化&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://cloud.google.com/sdk/docs/&#34;&gt;https://cloud.google.com/sdk/docs/&lt;/a&gt; からgoogle cloud sdkをダウンロード。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ cd google-cloud-sdk&#xA;$ ./bin/gcloud init&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;途中でブラウザが起動されて認証を終わらせる&lt;/p&gt;&#xA;&lt;h3 id=&#34;2-バケットid取得&#34;&gt;2. バケットID取得&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://play.google.com/apps/publish/&#34;&gt;https://play.google.com/apps/publish/&lt;/a&gt; Play Store Consoleの統計情報ページでアプリを選択して、ページの下に表示されてる「レポートの直接 URI:」の &lt;code&gt;pubsite_prod_rev_***&lt;/code&gt; をメモする。これが&lt;code&gt;developer_bucket_id&lt;/code&gt; になる&lt;/p&gt;</description>
    </item>
    <item>
      <title>Smartisan M1</title>
      <link>https://dongri.github.io/2017/04/smartisan-m1/</link>
      <pubDate>Wed, 05 Apr 2017 23:45:40 +0900</pubDate>
      <guid>https://dongri.github.io/2017/04/smartisan-m1/</guid>
      <description>&lt;p&gt;二ヶ月待ってたSmartisan M1が今日やっと届いた。触ってみた感じめっちゃよかった。&#xA;一時期使ってたOnePlus Oneに比べると天と地の差？&lt;/p&gt;&#xA;&lt;h1 id=&#34;google-play-services&#34;&gt;Google Play Services&lt;/h1&gt;&#xA;&lt;p&gt;デフォルトではGoogle Play Servicesが入ってないので、Googleアカウントと連携できない。&#xA;「谷歌安装器」というアプリをインストールしてGoogle Play Servicesをインストール。&#xA;インストールするとGoogle Play Storeもインストールボタンがあるが、押して見るとroot権限がないよ言われる。&#xA;Google Play Storeは別途検索してインストールすればOK.インストール環境して、Googleアカウント連携すると&#xA;連絡先、写真、カレンダーなどが同期できる。&lt;/p&gt;&#xA;&lt;h3 id=&#34;追記&#34;&gt;追記&lt;/h3&gt;&#xA;&lt;p&gt;SmartisanのStoreでGoogle Play StoreインストールするとGoogle Play Servicesが先にインストール&#xA;されて再起動される、その後Play Storeがインストールさるので、その後Googleアカウント連携できる。&lt;/p&gt;&#xA;&lt;h1 id=&#34;iijモバイルネットワーク設定&#34;&gt;iijモバイルネットワーク設定&lt;/h1&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;APN: iijmio.jp&#xA;ユーザー名: 必要なし&#xA;パスワード: 必要なし&#xA;認証タイプ: PAPまたはCHAP&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;これで楽しいSmartisan生活が始まる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Suica PASMO リーダー</title>
      <link>https://dongri.github.io/2016/12/suica-pasmo-%E3%83%AA%E3%83%BC%E3%83%80%E3%83%BC/</link>
      <pubDate>Sun, 18 Dec 2016 15:58:44 +0900</pubDate>
      <guid>https://dongri.github.io/2016/12/suica-pasmo-%E3%83%AA%E3%83%BC%E3%83%80%E3%83%BC/</guid>
      <description>&lt;p&gt;最近良く自分のPASMO残高を把握できず、改札口で引っかかって「ファック」と小さい声出した時がよくあって、&#xA;AndroidでPASMOの残高を確認できるアプリを探してみたが、どれも必要ない機能ががたくさんあるのとデザインがイマイチ、&#xA;且つうざい広告が出るので逆にイラッとしたり、自分のAndroidのせいか分からないが、クラッシュしまくったり、、、&lt;/p&gt;&#xA;&lt;p&gt;今週Android Payも出たし、FeliCaとかNFCの勉強も含めてアプリを開発してみようと思ってSuica, PASMOリーダーを作ってみることにした。&lt;/p&gt;&#xA;&lt;p&gt;一日でやっつけたもので処理は単純。かざすとアプリが起動して読み取ったデータを表示するだけ。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.guncy.android.cardreader&#34;&gt;Play Store - Suica PASMO リーダー&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;参考になったページ&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://osdn.net/projects/felicalib/wiki/suica&#34;&gt;FeliCa Library&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://www.denno.net/SFCardFan/&#34;&gt;路線、駅コード&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://qiita.com/pear510/items/38f94d61c020a17314b6&#34;&gt;AndroidでFelica(NFC)のブロックデータの取得&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;ダウンロード数がどれぐらいになるかわからないが、広告入れる予定もないし、機能追加しても課金する予定もないので、&#xA;オープンソースにしてメンテナンスして行こうと思います。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dongri/CardReader&#34;&gt;Github - CardReader&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;TODO&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;読み取れる件数は決まってるので、過去のデータを保存する機能&lt;/li&gt;&#xA;&lt;li&gt;CSVフォーマットでUSBストレージに保存する機能&lt;/li&gt;&#xA;&lt;li&gt;バグ修正&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Nexus 5X クリーンインストール &amp; Root化</title>
      <link>https://dongri.github.io/2016/05/nexus-5x-%E3%82%AF%E3%83%AA%E3%83%BC%E3%83%B3%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB-root%E5%8C%96/</link>
      <pubDate>Tue, 03 May 2016 01:36:00 +0900</pubDate>
      <guid>https://dongri.github.io/2016/05/nexus-5x-%E3%82%AF%E3%83%AA%E3%83%BC%E3%83%B3%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB-root%E5%8C%96/</guid>
      <description>&lt;h2 id=&#34;factory-image&#34;&gt;Factory Image&lt;/h2&gt;&#xA;&lt;p&gt;Googleが公開しているNexus端末向けの初期ROMデータのことを言います。&#xA;Factory Imageには、「system・boot（Kernel）・recovery・bootloader・radio・userdata・cache」などの各領域のイメージが含まれており、&#xA;それらを端末に書き込むことで領域を完全に初期化することが出来ます。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://developers.google.com/android/nexus/images&#34;&gt;https://developers.google.com/android/nexus/images&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;nexus5xのところの最新のものをダウンロードして解凍する&lt;/p&gt;&#xA;&lt;h2 id=&#34;oemロック解除&#34;&gt;OEMロック解除&lt;/h2&gt;&#xA;&lt;p&gt;開発者向けオプションで「OEMロック解除を有効にする」にチェックを入れる&lt;/p&gt;&#xA;&lt;h2 id=&#34;ブートローダーをアンロック&#34;&gt;ブートローダーをアンロック&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ adb reboot bootloader // もしくは、電源ボタンとボリュームダウンボタンを同時に長押し&#xA;$ fastboot oem unlock&#xA;...&#xA;OKAY [ 20.966s]&#xA;finished. total time: 20.966s&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;これでbootloaderがunlockの状態になる&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;DEVICE STATE - locked&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;↓&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;DEVICE STATE - unlocked&lt;/code&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;flash-all&#34;&gt;flash-all&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ cd bullhead-mhc19q&#xA;$ ./flash-all.sh&#xA;...&#xA;OKAY [  0.214s]&#xA;writing &amp;#39;cache&amp;#39;...&#xA;OKAY [  0.061s]&#xA;rebooting...&#xA;&#xA;finished. total time: 86.174s&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;カスタムリカバリの導入&#34;&gt;カスタムリカバリの導入&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://twrp.me/devices/lgnexus5x.html&#34;&gt;https://twrp.me/devices/lgnexus5x.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Download Links で 最新のimgファイルダウンロードする。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ fastboot flash recovery twrp-3.0.2-0-bullhead.img&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ブートローダー画面から「Recovery mode」を選択すると導入したTWRPを起動できるようなりました。&lt;/p&gt;&#xA;&lt;h2 id=&#34;root化&#34;&gt;Root化&lt;/h2&gt;&#xA;&lt;p&gt;SuperSUの最新版を見つけて入れる。バージョンが違うとAndroid自体が起動できなかったりするのでご注意を&lt;/p&gt;</description>
    </item>
    <item>
      <title>Android Stagefright</title>
      <link>https://dongri.github.io/2015/07/android-stagefright/</link>
      <pubDate>Tue, 28 Jul 2015 11:28:57 +0900</pubDate>
      <guid>https://dongri.github.io/2015/07/android-stagefright/</guid>
      <description>&lt;p&gt;詳しいことはこちら。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://jp.techcrunch.com/2015/07/28/20150727nasty-bug-lets-hackers-into-nearly-any-android-phone-using-nothing-but-a-message/&#34;&gt;Androidに最悪の脆弱性発見―ビデオメッセージを受信するだけでデバイスが乗っ取られる&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;ということで、まずSIMを抜いてOSのバージョンアップするようにした。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://plus.google.com/+CyanogenMod/posts/7iuX21Tz7n8&#34;&gt;CyanogenMod: Recent Stagefright issues&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;zip-fileダウンロードしてインストール&#34;&gt;Zip Fileダウンロードしてインストール&lt;/h3&gt;&#xA;&lt;p&gt;こちらから最新版cm-12.1をダウンロード。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://download.cyanogenmod.org/?device=bacon&#34;&gt;https://download.cyanogenmod.org/?device=bacon&lt;/a&gt;&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ adb push cm-12.1-20150728-NIGHTLY-bacon.zip /sdcard/&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;TWRPでinstallを選択して、cm-12.1-20150728-NIGHTLY-bacon.zipを選択してインストール&lt;/p&gt;&#xA;&lt;h3 id=&#34;google-appsインストール&#34;&gt;Google Appsインストール&lt;/h3&gt;&#xA;&lt;p&gt;CMではデフォルトでGoogle Apps入ってないので、追加でインストールする。&#xA;こちらからarmバージョンをダウンロードする。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/cgapps/vendor_google&#34;&gt;https://github.com/cgapps/vendor_google&lt;/a&gt;&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ adb push gapps-5.1-arm-2015-07-17-13-29.zip /sdcard/&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;TWRPでinstallを選択して、gapps-5.1-arm-2015-07-17-13-29.zipを選択してインストール&lt;/p&gt;</description>
    </item>
    <item>
      <title>OnePlus One</title>
      <link>https://dongri.github.io/2015/04/oneplus-one/</link>
      <pubDate>Tue, 14 Apr 2015 11:28:57 +0900</pubDate>
      <guid>https://dongri.github.io/2015/04/oneplus-one/</guid>
      <description>&lt;h3 id=&#34;1-bootloader-unlock&#34;&gt;1. Bootloader Unlock&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ adb reboot bootloader&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;CyanogenMod Logoが出る&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ fastboot oem unlock&#xA;...&#xA;OKAY [  0.005s]&#xA;finished. total time: 0.005s&#xA;$  &#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;2-install-twrp&#34;&gt;2. Install TWRP&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://dl.twrp.me/bacon/&#34;&gt;http://dl.twrp.me/bacon/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;twrp-2.8.6.0-bacon.img ダウンロード&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ adb reboot bootloader&#xA;&#xA;$ fastboot flash recovery twrp-2.8.6.0-bacon.img&#xA;target reported max download size of 536870912 bytes&#xA;sending &amp;#39;recovery&amp;#39; (10180 KB)...&#xA;OKAY [  0.323s]&#xA;writing &amp;#39;recovery&amp;#39;...&#xA;OKAY [  0.132s]&#xA;finished. total time: 0.455s&#xA;&#xA;$ fastboot reboot&#xA;rebooting...&#xA;&#xA;finished. total time: 0.005s&#xA;$&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;強制的にtwrp起動する&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ fastboot boot twrp-2.8.6.0-bacon.img&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;3-wipe&#34;&gt;3. Wipe&lt;/h3&gt;&#xA;&lt;p&gt;電源ボタンとボリュームダウンボタンを同時に押してTWRPを起動する。&#xA;TWRP起動したらwipeを選択して全ての削除する！&lt;/p&gt;</description>
    </item>
    <item>
      <title>OxygenOS</title>
      <link>https://dongri.github.io/2015/04/oxygenos/</link>
      <pubDate>Sun, 05 Apr 2015 11:28:57 +0900</pubDate>
      <guid>https://dongri.github.io/2015/04/oxygenos/</guid>
      <description>&lt;p&gt;(下に追記あり)&lt;/p&gt;&#xA;&lt;p&gt;昨日出たOxygenOS 1.0.0について簡単にメモでも残そうかと思って書いた。&lt;/p&gt;&#xA;&lt;p&gt;結論から言うと、OxygenOSはやめてCyanogenmod 12Sにした。&lt;/p&gt;&#xA;&lt;p&gt;April 3 2015&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.oneplus.net/2015/04/oxygenos-is-here-2/&#34;&gt;OxygenOS is Here&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://oneplus.net/oxygenos&#34;&gt;https://oneplus.net/oxygenos&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://forums.oneplus.net/threads/oxygenos-is-here-installation-guide.289398/&#34;&gt;Installation Guide&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;インストールの流れは&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Bootloader Unlock&lt;/li&gt;&#xA;&lt;li&gt;TWRPをインストール&lt;/li&gt;&#xA;&lt;li&gt;oxygenos_1.0.0.flashable.zipを実機に転送&lt;/li&gt;&#xA;&lt;li&gt;TWRPでzip指定してインストール&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;コマンドは以下のようになる&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ adb reboot bootloader&#xA;$ fastboot oem unlock&#xA;$ fastboot flash recovery ***.img&#xA;$ fastboot reboot&#xA;or&#xA;$ fastboot boot ***.img&#xA;&#xA;$ adb push oxygenos_1.0.0.flashable.zip /sdcard/&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;上の手順で既存OnePlus OneのCyanogenmod 11SからOxygenOSにはアップグレードしたことは成功したが、&#xA;人によって、まっさらな状態で綺麗にインストールしたいですよね（私だけ？）&lt;/p&gt;&#xA;&lt;p&gt;で、TWRPで全てのデータ削除して、0からOxygenOSをインストールしてみた。結果やばいことになった。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;そもそもステータスバー出て来ない。&lt;/li&gt;&#xA;&lt;li&gt;画面が真っ黒で壁紙設定できない。&lt;/li&gt;&#xA;&lt;li&gt;戻るボタン以外他のボタン効かない。&lt;/li&gt;&#xA;&lt;li&gt;ソフトボタンの表示設定しても出て来ない。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;２，３回インストールし直しても結果は同じだった。推測だが、既存OSからOxygenOSにアップグレードはサポートするけど、&#xA;クリーンインストールはサポートしてないかという疑惑。&lt;/p&gt;&#xA;&lt;p&gt;上で使い物にならなかったので、Cyanogenmodに頼るしかない。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://download.cyanogenmod.org/?device=bacon&amp;amp;type=nightly&#34;&gt;http://download.cyanogenmod.org/?device=bacon&amp;amp;type=nightly&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;2015-04-04 04:19:52の最新版があったので、ダウンロードしてインストール。&lt;/p&gt;&#xA;&lt;p&gt;これで、綺麗な状態で綺麗にインストール出来たわけだが、CyanogenMod IncとGoogleの関係上CyanogenModにGoogle系appsを入れちゃだめなので、別途インストールするしかない。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://wiki.cyanogenmod.org/w/Google_Apps&#34;&gt;Google Apps&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;ここでもよいだが、若干古い感じがする。ググって最新版をダウンロードしてインストール。&lt;/p&gt;&#xA;&lt;p&gt;その後Cyanogenmod 12Sの上にOxygenOSをインストールしてみてもダメだった。&lt;/p&gt;&#xA;&lt;p&gt;ということで、しばらくはOxygenOSは使わないことにした。&lt;/p&gt;&#xA;&lt;p&gt;以上、私の端末で起きたことでした。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Nexus5 Lollipop</title>
      <link>https://dongri.github.io/2014/11/nexus5-lollipop/</link>
      <pubDate>Thu, 13 Nov 2014 11:28:57 +0900</pubDate>
      <guid>https://dongri.github.io/2014/11/nexus5-lollipop/</guid>
      <description>&lt;p&gt;数ヶ月間ずっとAndroid L Preview版入れて使ってたけど、今日やっとGoogleのデベロッパーサイトにNexus5のLollipop Factory Imageが現れたので、手動で入れてみた。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://developers.google.com/android/nexus/images&#34;&gt;Factory Images for Nexus Devices&lt;/a&gt;&#xA;アクセスして、Nexus5用のimageファイルダウンロード。&lt;a href=&#34;https://dl.google.com/dl/android/aosp/hammerhead-lrx21o-factory-01315e08.tgz&#34;&gt;5.0 (LRX21O)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ tar -zxvf hammerhead-lrx21o-factory-01315e08.tgz&#xA;$ cd hammerhead-lrx21o&#xA;$ adb reboot bootloader&#xA;$ fastboot oem unlock&#xA;$ ./flash-all.sh&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;以上！&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pull APK</title>
      <link>https://dongri.github.io/2014/11/pull-apk/</link>
      <pubDate>Thu, 13 Nov 2014 11:28:57 +0900</pubDate>
      <guid>https://dongri.github.io/2014/11/pull-apk/</guid>
      <description>&lt;p&gt;Androidにあるapkファイルを取り出す方法紹介。&lt;/p&gt;&#xA;&lt;p&gt;PlayStoreに「apk 抽出」アプリたくさんあるけど、あえてadb shellで取り出す。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ adb shell pm list packages -f | grep&#xA;package:/data/app/jp.naver.line.android-1/base.apk=jp.naver.line.android&#xA;package:/data/app/jp.linecorp.LINEMAPS-1/base.apk=jp.linecorp.LINEMAPS&#xA;&#xA;$ adb pull /data/app/jp.naver.line.android-1/base.apk ~/Desktop&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;取り出したapkファイルをインストールしてみる。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ adb install base.apk&#xA;7522 KB/s (22969465 bytes in 2.981s)&#xA;        pkg: /data/local/tmp/base.apk&#xA;Success&#xA;$ adb shell pm list packages -f | grep line&#xA;package:/data/app/jp.naver.line.android-1/base.apk=jp.naver.line.android&#xA;package:/data/app/jp.linecorp.LINEMAPS-1/base.apk=jp.linecorp.LINEMAPS&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;※ Lollipopからはroot化が困難になった模様&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
