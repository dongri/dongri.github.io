<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Node on dongri</title>
    <link>https://dongri.github.io/tags/node/</link>
    <description>Recent content in Node on dongri</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 13 Oct 2024 18:25:29 +0900</lastBuildDate>
    <atom:link href="https://dongri.github.io/tags/node/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Unichain node (sepolia) 起動</title>
      <link>https://dongri.github.io/2024/10/unichain-node-sepolia-%E8%B5%B7%E5%8B%95/</link>
      <pubDate>Sun, 13 Oct 2024 18:25:29 +0900</pubDate>
      <guid>https://dongri.github.io/2024/10/unichain-node-sepolia-%E8%B5%B7%E5%8B%95/</guid>
      <description>&lt;p&gt;Unichain node (sepolia) を起動するメモ&lt;/p&gt;&#xA;&lt;h1 id=&#34;環境&#34;&gt;環境&lt;/h1&gt;&#xA;&lt;p&gt;Cloud: aws&#xA;OS: ubuntu 24&#xA;Instance: t2.xlarge(16GM Memory, 400GB SSD)&lt;/p&gt;&#xA;&lt;h1 id=&#34;docker-docker-compose-install&#34;&gt;docker, docker-compose install&lt;/h1&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# docker install&#xA;$ sudo apt update&#xA;$ sudo apt upgrade&#xA;&#xA;$ curl -sSL https://get.docker.com/ | sh&#xA;&#xA;$ docker version&#xA; Version:           27.3.1&#xA;&#xA;$ sudo service docker start&#xA;$ sudo systemctl enable docker&#xA;$ sudo usermod -aG docker ubuntu&#xA;$ exit&#xA;&#xA;$ docker ps&#xA;&#xA;# docker-compose install&#xA;$ sudo curl -L &amp;#34;https://github.com/docker/compose/releases/download/v2.29.7/docker-compose-$(uname -s)-$(uname -m)&amp;#34; -o /usr/local/bin/docker-compose&#xA;$ sudo chmod +x /usr/local/bin/docker-compose&#xA;$ docker-compose version&#xA;Docker Compose version v2.29.7&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;unichain&#34;&gt;unichain&lt;/h1&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ git clone https://github.com/Uniswap/unichain-node.git&#xA;$ cd unichain-node&#xA;$ vim .env.sepolia&#xA;OP_NODE_L1_BEACON=https://ethereum-sepolia-beacon-api.publicnode.com&#xA;&#xA;$ docker-compose up -d&#xA;$ curl -d &amp;#39;{&amp;#34;id&amp;#34;:1,&amp;#34;jsonrpc&amp;#34;:&amp;#34;2.0&amp;#34;,&amp;#34;method&amp;#34;:&amp;#34;eth_syncing&amp;#34;,&amp;#34;params&amp;#34;:[]}&amp;#39; -H &amp;#34;Content-Type: application/json&amp;#34; http://localhost:8545 | jq&#xA;&#xA;# logs&#xA;$ docker logs -f unichain-node-op-node-1&#xA;$ docker logs -f unichain-node-execution-client-1&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Ghost On Heroku</title>
      <link>https://dongri.github.io/2015/02/ghost-on-heroku/</link>
      <pubDate>Tue, 17 Feb 2015 11:28:57 +0900</pubDate>
      <guid>https://dongri.github.io/2015/02/ghost-on-heroku/</guid>
      <description>&lt;p&gt;Ghostをherokuにデプロイしてみた。&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;以下はあくまでの自分の環境で、nodeとpostgresなど一通りの開発環境は整った環境です。&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;ghostをローカルで動かしてみる&#34;&gt;Ghostをローカルで動かしてみる&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ cd /path/to/ghost/folder/&#xA;$ npm install --production&#xA;&#xA;$ npm start&#xA;$ open http://localhost:2368&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;herokuにpg-addon追加&#34;&gt;herokuにpg addon追加&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ heroku addons:add heroku-postgresql:dev&#xA;&#xA;$ heroku config&#xA;DATABASE_URL:                 postgres://{username}:{password}@ec2-***.compute-1.amazonaws.com:5432/{database}&#xA;HEROKU_POSTGRESQL_PURPLE_URL: postgres://{username}:{password}@ec2-***.compute-1.amazonaws.com:5432/{database}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;packagejson-修正&#34;&gt;package.json 修正&lt;/h2&gt;&#xA;&lt;p&gt;package.jsonのdependenciesにpg追加。バージョンは固定にしたほうがいいかも。。。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;#34;dependencies&amp;#34;: {&#xA;  ....,&#xA;  &amp;#34;pg&amp;#34;: &amp;#34;4.2.0&amp;#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;configjs-修正&#34;&gt;config.js 修正&lt;/h2&gt;&#xA;&lt;p&gt;以下の部分をproductionのところに設定する。databaseの部分は上のDATABASE_URLのところ参照&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;database: {&#xA;  client: &amp;#39;postgres&amp;#39;,&#xA;  connection: {&#xA;        host: &amp;#39;ec2-***.compute-1.amazonaws.com&amp;#39;,&#xA;        user: &amp;#39;{username}&amp;#39;,&#xA;        password: &amp;#39;{password}&amp;#39;,&#xA;        database: &amp;#39;{database}&amp;#39;,&#xA;        port: &amp;#39;5432&amp;#39;&#xA;  }&#xA;},&#xA;&#xA;server: {&#xA;    host: &amp;#39;0.0.0.0&amp;#39;,&#xA;    port: process.env.PORT&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;procfileファイル追加&#34;&gt;Procfileファイル追加&lt;/h2&gt;&#xA;&lt;p&gt;herokuにnodejsアプリをデプロイした人にはわかると思うがProfileを作成&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ vim Procfile&#xA;web: node index.js --production&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;git-remote-push&#34;&gt;git remote, push&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ git init&#xA;$ git remote add origin git@heroku.com:{app}.git&#xA;$ git add .&#xA;$ git commit -m &amp;#34;Ghost&amp;#34;&#xA;$ git push origin master&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;debug&#34;&gt;Debug&lt;/h2&gt;&#xA;&lt;p&gt;heroku上でApplication Error!&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
