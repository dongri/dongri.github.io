<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on dongri</title>
    <link>https://dongri.github.io/tags/linux/</link>
    <description>Recent content in Linux on dongri</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 14 Jan 2017 23:25:44 +0900</lastBuildDate>
    <atom:link href="https://dongri.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>開発環境をLinuxにした</title>
      <link>https://dongri.github.io/2017/01/%E9%96%8B%E7%99%BA%E7%92%B0%E5%A2%83%E3%82%92linux%E3%81%AB%E3%81%97%E3%81%9F/</link>
      <pubDate>Sat, 14 Jan 2017 23:25:44 +0900</pubDate>
      <guid>https://dongri.github.io/2017/01/%E9%96%8B%E7%99%BA%E7%92%B0%E5%A2%83%E3%82%92linux%E3%81%AB%E3%81%97%E3%81%9F/</guid>
      <description>&lt;p&gt;開発者のMac離れ?(去年からそういう噂があるけど)の流れで年末帰国時に買って来た&#xA;Mi Notebook Air (&lt;a href=&#34;http://www.mi.com/mibookair/&#34;&gt;http://www.mi.com/mibookair/&lt;/a&gt;) にLinuxを入れて開発環境を構築してみた。&#xA;Mi Notebook Airは1.07kgでMacBook Air1.35kgより軽くてリュックが非常に軽くなった。&lt;/p&gt;&#xA;&lt;h2 id=&#34;macが嫌いになった理由&#34;&gt;Macが嫌いになった理由&lt;/h2&gt;&#xA;&lt;p&gt;自分は強烈なApple, Macファンでもないが、常に新しいMacBookを買って開発環境にしてた。しかし、&#xA;今回のMacBook TouchBarにはがっかりした。なかなか慣れないキーボードのパチパチ感、仕様にはバッテリーで&#xA;最大10時間使えると書いてあるのに実はフル充電から４時間ほどしか使えないし、macOSのバージョンアップで&#xA;バッテリ残量の残り時間も消したりしてappleに対しての不信感が増してきた。&lt;/p&gt;&#xA;&lt;h2 id=&#34;ubuntuにした理由&#34;&gt;Ubuntuにした理由&lt;/h2&gt;&#xA;&lt;p&gt;別にLinux OSとvimさえあればいいというエンジニアもいるかも知らないが、自分の場合は業務開発端末としては&#xA;ある程度GUIツールを使わないといけないのでLinux Desktopでシェアが一番高いUbuntuにした。&#xA;実はUbuntu Desktopにもいろんなディストリビューションがあって選択が非常に多くて、&#xA;3日かけて以下の順に試してみたが、最終的にはUbuntuにした。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ubuntu -&amp;gt; kubuntu -&amp;gt; xubuntu -&amp;gt; budgie -&amp;gt; gnome -&amp;gt; mate -&amp;gt; elementary os -&amp;gt; ubuntu&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;xubuntuは非常に軽い、budgieは非常に格好いい、elementary osはインタフェースがmacと似ていて操作しやすい。&#xA;それぞれメリットもあればデメリットもあった。dropboxのアイコンが表示されなかったり同期できなかったり、&#xA;OS Update後起動できなくなかったり、Chromeがクラッシュしたりと不安定なものもあった。&#xA;サードパーティ製のアプリ見ても標準ubuntuでは絶対正しく動くように開発されてるので、GUIツールをある程度使う&#xA;ためにはubuntuを使う必要があった。以上の理由からUbuntuにした。&lt;/p&gt;&#xA;&lt;h2 id=&#34;引越して困ったこと&#34;&gt;引越して困ったこと&lt;/h2&gt;&#xA;&lt;p&gt;言わなくてもわかるようにiOSの開発ができなくなった。覚悟した上で引っ越ししたので家にも会社にもMacを用意した。&lt;/p&gt;&#xA;&lt;p&gt;引越しで一番頑張って設定してみようとして失敗したのがVPNだった。VPN PPTPはデフォルトでサポートしてるが&#xA;l2tp ipsecは入ってなくて自前でなんとかしないといけなくて以下のツール使って頑張ったけどダメだった。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/nm-l2tp/network-manager-l2tp&#34;&gt;https://github.com/nm-l2tp/network-manager-l2tp&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/hwdsl2/setup-ipsec-vpn&#34;&gt;https://github.com/hwdsl2/setup-ipsec-vpn&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;あとは1password。こいつは最初どうしようと思ったが、1pass CUIが何個かあってなんとかなった。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/georgebrock/1pass&#34;&gt;https://github.com/georgebrock/1pass&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/oggy/1pass&#34;&gt;https://github.com/oggy/1pass&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/dlokesh/1pass&#34;&gt;https://github.com/dlokesh/1pass&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;引越して良かったこと&#34;&gt;引越して良かったこと&lt;/h2&gt;&#xA;&lt;p&gt;プライベートも会社も開発環境がすべてDockerだったので、Docker for Macとさようならできたのがよかった。&#xA;そいつが使いにくいわけではないが、本来のDockerを使う感じがよかった。 &lt;code&gt;brew&lt;/code&gt; より &lt;code&gt;apt-get&lt;/code&gt; が好きだった。&#xA;LINE, Wechatなど余計なアプリ入れてなくて、terminal, chrome, atom しか入れてないんでコード書くのにもっと集中できる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>GHOST (CVE-2015-0235)</title>
      <link>https://dongri.github.io/2015/01/ghost-cve-2015-0235/</link>
      <pubDate>Wed, 28 Jan 2015 11:28:57 +0900</pubDate>
      <guid>https://dongri.github.io/2015/01/ghost-cve-2015-0235/</guid>
      <description>&lt;p&gt;クラウドセキュリティ企業Qualysの研究者が、Linux GNU Cライブラリ（glibc）に深刻なセキュリティホールである「GHOST」（CVE-2015-0235）を発見したらしい。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://www.openwall.com/lists/oss-security/2015/01/27/9&#34;&gt;http://www.openwall.com/lists/oss-security/2015/01/27/9&lt;/a&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;このセキュリティホールは、glibc-2.2（2000年11月10日にリリース）を使用してビルドされたすべてのLinuxシステムに存在する。Qualysによれば、このバグは実際には、2013年5月21日にリリースされた、glibc-2.17とglibc-2.18の間のバグフィックスで修正されている。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;ポイントはglibcのバージョンで判断するのではなく、パッチを当てたかどうか。&lt;/p&gt;&#xA;&lt;h3 id=&#34;対応前&#34;&gt;対応前&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;/lib/libc.so.6&lt;/li&gt;&#xA;&lt;li&gt;/lib64/libc.so.6&lt;/li&gt;&#xA;&lt;li&gt;/lib/i386-linux-gnu/libc.so.6&lt;/li&gt;&#xA;&lt;li&gt;/lib/x86_64-linux-gnu/libc.so.6&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ /lib64/libc.so.6&#xA;GNU C Library stable release version 2.12, by Roland McGrath et al.&#xA;Copyright (C) 2010 Free Software Foundation, Inc.&#xA;This is free software; see the source for copying conditions.&#xA;There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A&#xA;PARTICULAR PURPOSE.&#xA;Compiled by GNU CC version 4.4.7 20120313 (Red Hat 4.4.7-4).&#xA;Compiled on a Linux 2.6.32 system on 2014-08-29.&#xA;Available extensions:&#xA;The C stubs add-on version 2.1.2.&#xA;crypt add-on version 2.1 by Michael Glad and others&#xA;GNU Libidn by Simon Josefsson&#xA;Native POSIX Threads Library by Ulrich Drepper et al&#xA;BIND-8.2.3-T5B&#xA;RT using linux kernel aio&#xA;libc ABIs: UNIQUE IFUNC&#xA;For bug reporting instructions, please see:&#xA;&amp;lt;http://www.gnu.org/software/libc/bugs.html&amp;gt;.&#xA;&#xA;$&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;対応&#34;&gt;対応&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ sudo yum clean all&#xA;&#xA;$ sudo yum update glibc&#xA;or&#xA;$ sudo yum update&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;対応後&#34;&gt;対応後&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ /lib64/libc.so.6&#xA;GNU C Library stable release version 2.12, by Roland McGrath et al.&#xA;Copyright (C) 2010 Free Software Foundation, Inc.&#xA;This is free software; see the source for copying conditions.&#xA;There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A&#xA;PARTICULAR PURPOSE.&#xA;Compiled by GNU CC version 4.4.7 20120313 (Red Hat 4.4.7-11).&#xA;Compiled on a Linux 2.6.32 system on 2015-01-27.&#xA;Available extensions:&#xA;The C stubs add-on version 2.1.2.&#xA;crypt add-on version 2.1 by Michael Glad and others&#xA;GNU Libidn by Simon Josefsson&#xA;Native POSIX Threads Library by Ulrich Drepper et al&#xA;BIND-8.2.3-T5B&#xA;RT using linux kernel aio&#xA;libc ABIs: UNIQUE IFUNC&#xA;For bug reporting instructions, please see:&#xA;&amp;lt;http://www.gnu.org/software/libc/bugs.html&amp;gt;.&#xA;&#xA;$&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;何が変わった&#34;&gt;何が変わった？&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Compiled on a Linux 2.6.32 system on 2015-01-27.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;サーバー再起動&#34;&gt;サーバー再起動&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ sudo reboot&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;CentOS 6.5 x64 (digitalocean) での作業でした。&lt;/p&gt;</description>
    </item>
    <item>
      <title>cron debug</title>
      <link>https://dongri.github.io/2014/11/cron-debug/</link>
      <pubDate>Mon, 10 Nov 2014 11:28:57 +0900</pubDate>
      <guid>https://dongri.github.io/2014/11/cron-debug/</guid>
      <description>&lt;p&gt;毎回ハマるのでメモしとく。&lt;/p&gt;&#xA;&lt;p&gt;コンソールでは正しく動くけど、crontabに記述すると動かない。&lt;/p&gt;&#xA;&lt;p&gt;調べてみる順番&lt;/p&gt;&#xA;&lt;p&gt;1.crondが動くか確認&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ ps aux | grep crond&#xA;root     25500  0.0  0.0 119380  1256 ?        Ss   Sep10   2:29 crond&#xA;&#xA;$ /etc/init.d/crond status&#xA;crond (pid  25500) is running...&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;2.実行権限あるか確認してみる&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ ls -l /var/cron/hoge.sh&#xA;-rwxr-xr-x  1 root   root     90 Nov 10 08:54 hoge.sh&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;3.ログを仕込んでみる&lt;/p&gt;&#xA;&lt;p&gt;標準出力は 1&lt;br&gt;&#xA;標準エラー出力は 2&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;0 5 * * * echo  &amp;#34;cron test&amp;#34; &amp;gt;&amp;gt; /home/dongri/cron-success.log 2&amp;gt;&amp;gt; /home/dongri/cron-error.log | mail -s &amp;#34;Cron Result&amp;#34; dongri@gmail.com&#xA;&#xA;0 5 * * * /var/cron/hoge.sh &amp;gt;&amp;gt; /home/dongri/cron-success.log 2&amp;gt;&amp;gt; /home/dongri/cron-error.log | mail -s &amp;#34;Cron Result&amp;#34; dongri@gmail.com&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;※ 「2&amp;gt;&amp;amp;1」の意味は2の出力先を、1の出力先と同じようにする&lt;/p&gt;</description>
    </item>
    <item>
      <title>ShellShock</title>
      <link>https://dongri.github.io/2014/09/shellshock/</link>
      <pubDate>Sun, 28 Sep 2014 11:28:57 +0900</pubDate>
      <guid>https://dongri.github.io/2014/09/shellshock/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;3日ほど経ちましたが、あのshellshockについて見かけた記事ををまとめてみた。&lt;/p&gt;&#xA;&lt;p&gt;当日は社内で二人で「楽しく」対応したが、ある意味面白かった。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;BASHの脆弱性でCGIスクリプトにアレさせてみました&lt;br&gt;&#xA;&lt;a href=&#34;http://www.walbrix.com/jp/blog/2014-09-bash-code-injection.html&#34;&gt;http://www.walbrix.com/jp/blog/2014-09-bash-code-injection.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;先程から騒ぎになっているbashの脆弱性について&lt;br&gt;&#xA;&lt;a href=&#34;http://blog.ueda.asia/?p=3967&#34;&gt;http://blog.ueda.asia/?p=3967&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;bashの脆弱性(CVE-2014-6271) #ShellShock の関連リンクをまとめてみた&lt;br&gt;&#xA;&lt;a href=&#34;http://d.hatena.ne.jp/Kango/20140925/1411612246&#34;&gt;http://d.hatena.ne.jp/Kango/20140925/1411612246&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;bashの脆弱性がヤバすぎる件&lt;br&gt;&#xA;&lt;a href=&#34;https://x86-64.jp/blog/CVE-2014-6271&#34;&gt;https://x86-64.jp/blog/CVE-2014-6271&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;bash脆弱性への対応&lt;br&gt;&#xA;&lt;a href=&#34;http://qiita.com/tomohisaota/items/8a8049eea11ece3781b3&#34;&gt;http://qiita.com/tomohisaota/items/8a8049eea11ece3781b3&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;2014/09/24に発表されたBash脆弱性と解決法(RedHat系)&lt;br&gt;&#xA;&lt;a href=&#34;http://qiita.com/richmikan@github/items/5f54114a46e64178133d%EF%BB%BF&#34;&gt;http://qiita.com/richmikan@github/items/5f54114a46e64178133d﻿&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;AWS Elastic Beanstalk bash脆弱性への対応&lt;br&gt;&#xA;&lt;a href=&#34;http://qiita.com/dongri/items/5a1fd49e091438ef37d7&#34;&gt;http://qiita.com/dongri/items/5a1fd49e091438ef37d7&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;この後もいろんな記事出たが、省略&lt;/p&gt;&#xA;&lt;h3 id=&#34;対応内容&#34;&gt;対応内容&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ env x=&amp;#39;() { :;}; echo vulnerable&amp;#39; bash -c &amp;#39;echo bash test&amp;#39;&#xA;vulnerable&#xA;bash test&#xA;&#xA;$ sudo yum clean all&#xA;&#xA;$ sudo yum update bash&#xA;&#xA;$ env x=&amp;#39;() { :;}; echo vulnerable&amp;#39; bash -c &amp;#39;echo bash test&amp;#39;&#xA;bash test&#xA;$&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
  </channel>
</rss>
