<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tool on dongri</title>
    <link>https://dongri.github.io/tags/tool/</link>
    <description>Recent content in Tool on dongri</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 14 Nov 2014 11:28:57 +0900</lastBuildDate>
    <atom:link href="https://dongri.github.io/tags/tool/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>tmux on yosemite</title>
      <link>https://dongri.github.io/2014/11/tmux-on-yosemite/</link>
      <pubDate>Fri, 14 Nov 2014 11:28:57 +0900</pubDate>
      <guid>https://dongri.github.io/2014/11/tmux-on-yosemite/</guid>
      <description>&lt;p&gt;やっとYosemiteにした。&lt;/p&gt;&#xA;&lt;p&gt;自分の環境でちょっと動かなかった、ぶつかった問題をまとめてみた。&lt;/p&gt;&#xA;&lt;h3 id=&#34;homebrew&#34;&gt;homebrew&lt;/h3&gt;&#xA;&lt;p&gt;まずはこのエラー&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;/opt/boxen/homebrew/bin/brew: line 26: /opt/boxen/homebrew/Library/brew.rb: Undefined error: 0&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;brew.rbを修正&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;--- #!/System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/bin/ruby -W0&#xA;+++ #!/System/Library/Frameworks/Ruby.framework/Versions/Current/usr/bin/ruby -W0&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;brew-update&#34;&gt;brew update&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ git add /opt/boxen/homebrew/Library/brew.rb&#xA;$ git commit -am &amp;#34;Fix ruby version&amp;#34;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;mysqlのバージョン固定する必要あるので&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ brew pin mysql&#xA;$ brew update&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;tmux&#34;&gt;tmux&lt;/h3&gt;&#xA;&lt;p&gt;tmuxからatom, gitx起動できない。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;LSOpenURLsWithRole() failed for the application /Applications/Atom.app with error -10810.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;reattach-to-user-namespace インストール&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ brew install reattach-to-user-namespace&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;tumx.conf に追加&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# Fix LSOpenURLsWithRole() error on OS X. Requires reattach-to-user-namespace&#xA;# to be installed.&#xA;set-option -g default-command &amp;#34;which reattach-to-user-namespace &amp;gt; /dev/null &amp;amp;&amp;amp; reattach-to-user-namespace -l $SHELL || $SHELL&amp;#34;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;(今さらだけど、Yosemiteキレイね！)&lt;/p&gt;</description>
    </item>
    <item>
      <title>oh-my-zsh</title>
      <link>https://dongri.github.io/2014/05/oh-my-zsh/</link>
      <pubDate>Tue, 27 May 2014 11:28:57 +0900</pubDate>
      <guid>https://dongri.github.io/2014/05/oh-my-zsh/</guid>
      <description>&lt;h3 id=&#34;oh-my-zshとは&#34;&gt;oh-my-zshとは&lt;/h3&gt;&#xA;&lt;p&gt;zsh の設定を管理するフレームワーク&lt;/p&gt;&#xA;&lt;h3 id=&#34;oh-my-zshをインストール&#34;&gt;oh-my-zshをインストール&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;% wget http://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh&#xA;&#xA;Found ~/.zshrc. Backing up to ~/.zshrc.pre-oh-my-zsh&#xA;Using the Oh My Zsh template file and adding it to ~/.zshrc&#xA;Copying your current PATH and adding it to the end of ~/.zshrc for you.&#xA;Time to change your default shell to zsh!&#xA;Changing shell for dongri.&#xA;Password for dongri:&#xA;chsh: no changes made&#xA;&#xA;  ____  / /_     ____ ___  __  __   ____  _____/ /_&#xA; / __ \/ __ \   / __ `__ \/ / / /  /_  / / ___/ __ \&#xA;/ /_/ / / / /  / / / / / / /_/ /    / /_(__  ) / / /&#xA;\____/_/ /_/  /_/ /_/ /_/\__, /    /___/____/_/ /_/&#xA;                        /____/                       ....is now installed!&#xA;&#xA;&#xA; Please look over the ~/.zshrc file to select plugins, themes, and options.&#xA;&#xA; p.s. Follow us at http://twitter.com/ohmyzsh.  &#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;既存の .zschrc は .zshrc.pre-oh-py-zsh にバックアップされる&lt;/p&gt;</description>
    </item>
    <item>
      <title>Powerline</title>
      <link>https://dongri.github.io/2014/05/powerline/</link>
      <pubDate>Mon, 26 May 2014 11:28:57 +0900</pubDate>
      <guid>https://dongri.github.io/2014/05/powerline/</guid>
      <description>&lt;p&gt;Powerline化！&lt;/p&gt;&#xA;&lt;p&gt;歴史的には vim powerline, zsh powerline, tmux powerline がそれぞれあったみたいだったが、最近はそれがひとつに統合されました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Lokaltog/powerline&#34;&gt;https://github.com/Lokaltog/powerline&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;まず-vim-から&#34;&gt;まず vim から&lt;/h3&gt;&#xA;&lt;p&gt;vim プラグイン管理ツールNeoBundle.vimをインストール&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ mkdir -p ~/.vim/bundle&#xA;$ git clone https://github.com/Shougo/neobundle.vim ~/.vim/bundle/neobundle.vim&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;~/.vimrc 編集&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;if has(&amp;#39;vim_starting&amp;#39;)&#xA;  set runtimepath+=~/.vim/bundle/neobundle.vim/&#xA;  call neobundle#rc(expand(&amp;#39;~/.vim/bundle/&amp;#39;))&#xA;endif&#xA;&#xA;&amp;#34;&amp;#34; NeoBundle&#xA;NeoBundle &amp;#39;Shougo/neobundle.vim&amp;#39;&#xA;&#xA;filetype plugin indent on&#xA;filetype indent on&#xA;syntax on&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;powerlineのインストール&#34;&gt;Powerlineのインストール&lt;/h3&gt;&#xA;&lt;p&gt;~/.vimrcに追加&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;NeoBundle &amp;#39;alpaca-tc/alpaca_powertabline&amp;#39;&#xA;NeoBundle &amp;#39;https://github.com/Lokaltog/powerline.git&amp;#39;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;保存して、もう一度開いてインストール&#xA;:NeoBundleInstall&lt;/p&gt;&#xA;&lt;p&gt;ちなみにアンインストールは NeoBundleをvimrcから消してから&#xA;:NeoBundleClean&lt;/p&gt;&#xA;&lt;h3 id=&#34;powerlineのためfontにパッチをあてる&#34;&gt;powerlineのためfontにパッチをあてる&lt;/h3&gt;&#xA;&lt;p&gt;Powerlineのステータスバーには特殊文字列を使うために既存fontにパッチを当てる必要ある。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;% git clone https://github.com/Lokaltog/vim-powerline.git&#xA;&#xA;% brew update&#xA;% brew install fontforge&#xA;% fontforge -script vim-powerline/fontpatcher/fontpatcher  ~/Library/Fonts/&amp;lt;font&amp;gt;&#xA;% cp *-Powerline.ttf  ~/Library/Fonts/&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;もしくは &lt;a href=&#34;https://github.com/Lokaltog/powerline-fonts&#34;&gt;https://github.com/Lokaltog/powerline-fonts&lt;/a&gt; 直接ダウンロードする。&lt;/p&gt;</description>
    </item>
    <item>
      <title>tmuxinator</title>
      <link>https://dongri.github.io/2014/05/tmuxinator/</link>
      <pubDate>Sun, 25 May 2014 11:28:57 +0900</pubDate>
      <guid>https://dongri.github.io/2014/05/tmuxinator/</guid>
      <description>&lt;p&gt;tmux使ってて一番困ったことがMac再起動した時にtmux sessionがクリアされて、windowを最初から&#xA;起動しないとだめだった。&lt;/p&gt;&#xA;&lt;p&gt;そこでtmuxinatorが登場！&lt;/p&gt;&#xA;&lt;p&gt;tmuxinator は、tmuxで起動するウィンドウやレイアウトを事前に設定しておき、&#xA;tmuxinatorコマンドを実行することにより設定通りのウィンドウ配置にするツールです。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;% tmux -V&#xA;tmux 1.9a&#xA;% gem -v&#xA;2.0.14&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;tmuxinator-インストール--設定&#34;&gt;tmuxinator インストール &amp;amp; 設定&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;% gem install tmuxinator&#xA;% echo $SHELL&#xA;/bin/zsh&#xA;$ echo $EDITOR&#xA;vim&#xA;% echo &amp;#39;source ~/.tmuxinator/tmuxinator.zsh&amp;#39; &amp;gt;&amp;gt; ${HOME}/.zshrc&#xA;% soruce ~/.zshrc&#xA;% mux doctor&#xA;Checking if tmux is installed ==&amp;gt; Yes&#xA;Checking if $EDITOR is set ==&amp;gt; Yes&#xA;Checking if $SHELL is set ==&amp;gt; Yes&#xA;%&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;project-作成--設定&#34;&gt;project 作成 &amp;amp; 設定&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;% mux new dongri&#xA;&#xA;# ~/.tmuxinator/dongri.yml&#xA;&#xA;name: dongri&#xA;root: ~/&#xA;&#xA;# Optional tmux socket&#xA;# socket_name: foo&#xA;&#xA;# Runs before everything. Use it to start daemons etc.&#xA;# pre: sudo /etc/rc.d/mysqld start&#xA;&#xA;# Runs in each window and pane before window/pane specific commands. Useful for setting up interpreter versions.&#xA;# pre_window: rbenv shell 2.0.0-p247&#xA;&#xA;# Pass command line options to tmux. Useful for specifying a different tmux.conf.&#xA;# tmux_options: -f ~/.tmux.mac.conf&#xA;&#xA;# Change the command to call tmux.  This can be used by derivatives/wrappers like byobu.&#xA;# tmux_command: byobu&#xA;&#xA;windows:&#xA;  - local:&#xA;      layout: 16ba,238x62,0,0{119x62,0,0[119x31,0,0,34,119x30,0,32,37],118x62,120,0[118x31,120,0,35,118x30,120,32,36]}&#xA;      panes:&#xA;        -&#xA;        -&#xA;        -&#xA;        -&#xA;  - vagrant:&#xA;      layout: 16ba,238x62,0,0{119x62,0,0[119x31,0,0,34,119x30,0,32,37],118x62,120,0[118x31,120,0,35,118x30,120,32,36]}&#xA;      panes:&#xA;        - cd project/project-backend&#xA;        - cd project/project-web&#xA;        - cd project/inside-project&#xA;  - git-server:&#xA;      layout: 16ba,238x62,0,0{119x62,0,0[119x31,0,0,34,119x30,0,32,37],118x62,120,0[118x31,120,0,35,118x30,120,32,36]}&#xA;      panes:&#xA;        - cd project/project-backend&#xA;        - cd project/project-api&#xA;        - cd project/project-api&#xA;        - cd project/server-config&#xA;  - git-others:&#xA;      layout: 16ba,238x62,0,0{119x62,0,0[119x31,0,0,34,119x30,0,32,37],118x62,120,0[118x31,120,0,35,118x30,120,32,36]}&#xA;      panes:&#xA;        - cd project/project-ios&#xA;        - cd project/project-android&#xA;        - cd project/project-web&#xA;        - cd project/inside-project&#xA;  - project-local:&#xA;      layout: 16ba,238x62,0,0{119x62,0,0[119x31,0,0,34,119x30,0,32,37],118x62,120,0[118x31,120,0,35,118x30,120,32,36]}&#xA;      panes:&#xA;        - cd project/project-backend&#xA;        - cd project/project-web&#xA;        - cd project/project-api&#xA;        - cd project/inside-project&#xA;  - project-dev:&#xA;      layout: a916,237x59,0,0{118x59,0,0,74,118x59,119,0,90}&#xA;      panes:&#xA;        - ssh project-dev&#xA;        - ssh project-dev&#xA;  - project-script:&#xA;      layout: a916,237x59,0,0{118x59,0,0,74,118x59,119,0,90}&#xA;      panes:&#xA;        - ssh project-script&#xA;        - ssh project-script&#xA;  - project-bastion:&#xA;      layout: a916,237x59,0,0{118x59,0,0,74,118x59,119,0,90}&#xA;      panes:&#xA;        - ssh aws-project-bastion&#xA;        - ssh aws-project-bastion&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;layoutはところわけわらない数字は list-windows で表示された数字です。自分の設定したtmuxの環境で以下のコマンドで確認&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
